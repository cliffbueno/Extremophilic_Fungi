ko_meta$Axis02j <- scores(pcoa1_ko)[,2]
micro.hullsj <- ddply(ko_meta, c("Environment"), find_hullj)
g2_ko <- ggplot(ko_meta, aes(Axis01j, Axis02j, colour = Environment)) +
geom_polygon(data = micro.hullsj, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5) +
labs(x = paste("PC1: ", pcoa1A1, "%", sep = ""),
y = paste("PC2: ", pcoa1A2, "%", sep = ""),
colour = "Environment",
title = "KO Jaccard") +
theme_bw() +
theme(legend.position = "right",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g2_ko
plot_grid(g1_ko, g2_ko, align = "hv", ncol = 2, rel_widths = c(1,1.515))
# These are incredibly similar and also show a dense cluster with barely any dissimilarity
# I suspect this is driven by KO count, metagenomes with only 1 KO can't be too dissimilar
# Check number of ones
ko_richness <- ko_meta %>%
dplyr::select(richness_KO) %>%
arrange(desc(richness_KO)) %>%
mutate(index = seq(1:nrow(.)))
plot(rownames(ko_list), ko_list$n)
plot(ko_richness$index, ko_richness$richness_KO)
sum(ko_richness$richness_KO == 1) # 77 with just 1 KO
sum(ko_richness$richness_KO == 2) # 51 with just 2 KOs
sum(ko_richness$richness_KO == 3) # 55 with just 3 KOs
# Need to find good cutoff with some KOs and still high sample size
sum(ko_richness$richness_KO > 10) # 492 with > 10
# Subset the metadata and community datasets
ko_meta_filt <- ko_meta %>%
filter(richness_KO > 10)
ko_comm_DESeq_filt <- ko_comm_DESeq %>%
filter(rownames(.) %in% rownames(ko_meta_filt))
sum(rownames(ko_comm_DESeq_filt) != rownames(ko_meta_filt))
table(ko_meta_filt$Environment)
# Redo the above with the filtered dataset
bc_ko <- vegdist(ko_comm_DESeq_filt, method = "bray")
pcoa_ko <- cmdscale(bc_ko, k = nrow(ko_meta_filt) - 1, eig = T)
pcoaA1 <- round((eigenvals(pcoa_ko)/sum(eigenvals(pcoa_ko)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa_ko)/sum(eigenvals(pcoa_ko)))[2]*100, digits = 1)
ko_meta_filt$Axis01 <- scores(pcoa_ko)[,1]
ko_meta_filt$Axis02 <- scores(pcoa_ko)[,2]
micro.hulls <- ddply(ko_meta_filt, c("Environment"), find_hull)
g3_ko <- ggplot(ko_meta_filt, aes(Axis01, Axis02, colour = Environment)) +
geom_polygon(data = micro.hulls, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Site",
title = "KO Bray-Curtis") +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g3_ko
jac_ko <- vegdist(ko_comm_DESeq_filt, method = "jaccard")
pcoa1_ko <- cmdscale(jac_ko, k = nrow(ko_meta_filt) - 1, eig = T)
pcoa1A1 <- round((eigenvals(pcoa1_ko)/sum(eigenvals(pcoa1_ko)))[1]*100, digits = 1)
pcoa1A2 <- round((eigenvals(pcoa1_ko)/sum(eigenvals(pcoa1_ko)))[2]*100, digits = 1)
ko_meta_filt$Axis01j <- scores(pcoa1_ko)[,1]
ko_meta_filt$Axis02j <- scores(pcoa1_ko)[,2]
micro.hullsj <- ddply(ko_meta_filt, c("Environment"), find_hullj)
g4_ko <- ggplot(ko_meta_filt, aes(Axis01j, Axis02j, colour = Environment)) +
geom_polygon(data = micro.hullsj, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5) +
labs(x = paste("PC1: ", pcoa1A1, "%", sep = ""),
y = paste("PC2: ", pcoa1A2, "%", sep = ""),
colour = "Environment",
title = "KO Jaccard") +
theme_bw() +
theme(legend.position = "right",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g4_ko
plot_grid(g3_ko, g4_ko, align = "hv", ncol = 2, rel_widths = c(1,1.515))
# Still looks weird, increase the cutoff and rerun
sum(ko_richness$richness_KO > 100) # 161 with > 100
ko_meta_filt <- ko_meta %>%
filter(richness_KO > 100)
ko_comm_DESeq_filt <- ko_comm_DESeq %>%
filter(rownames(.) %in% rownames(ko_meta_filt))
sum(rownames(ko_comm_DESeq_filt) != rownames(ko_meta_filt))
table(ko_meta_filt$Environment)
bc_ko <- vegdist(ko_comm_DESeq_filt, method = "bray")
pcoa_ko <- cmdscale(bc_ko, k = nrow(ko_meta_filt) - 1, eig = T)
pcoaA1 <- round((eigenvals(pcoa_ko)/sum(eigenvals(pcoa_ko)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa_ko)/sum(eigenvals(pcoa_ko)))[2]*100, digits = 1)
ko_meta_filt$Axis01 <- scores(pcoa_ko)[,1]
ko_meta_filt$Axis02 <- scores(pcoa_ko)[,2]
micro.hulls <- ddply(ko_meta_filt, c("Environment"), find_hull)
g5_ko <- ggplot(ko_meta_filt, aes(Axis01, Axis02, colour = Environment)) +
geom_polygon(data = micro.hulls, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Site",
title = "KO Bray-Curtis") +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g5_ko
jac_ko <- vegdist(ko_comm_DESeq_filt, method = "jaccard")
pcoa1_ko <- cmdscale(jac_ko, k = nrow(ko_meta_filt) - 1, eig = T)
pcoa1A1 <- round((eigenvals(pcoa1_ko)/sum(eigenvals(pcoa1_ko)))[1]*100, digits = 1)
pcoa1A2 <- round((eigenvals(pcoa1_ko)/sum(eigenvals(pcoa1_ko)))[2]*100, digits = 1)
ko_meta_filt$Axis01j <- scores(pcoa1_ko)[,1]
ko_meta_filt$Axis02j <- scores(pcoa1_ko)[,2]
micro.hullsj <- ddply(ko_meta_filt, c("Environment"), find_hullj)
g6_ko <- ggplot(ko_meta_filt, aes(Axis01j, Axis02j, colour = Environment)) +
geom_polygon(data = micro.hullsj, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5) +
labs(x = paste("PC1: ", pcoa1A1, "%", sep = ""),
y = paste("PC2: ", pcoa1A2, "%", sep = ""),
colour = "Environment",
title = "KO Jaccard") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g6_ko
ko_pcoa_leg <- get_legend(ggplot(ko_meta_filt, aes(Axis01j, Axis02j, colour = Environment)) +
geom_polygon(data = micro.hullsj, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5) +
labs(x = paste("PC1: ", pcoa1A1, "%", sep = ""),
y = paste("PC2: ", pcoa1A2, "%", sep = ""),
colour = "Environment",
title = "KO Jaccard") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme_bw() +
theme(legend.position = "right",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0)))
pdf("Figs/KO_PCoA.pdf", width = 8.5, height = 3.5)
plot_grid(g5_ko, g6_ko, ko_pcoa_leg, align = "hv", ncol = 3, rel_widths = c(2.5,2.5,1))
dev.off()
# Also do with the same subset of the data as taxonomy (26 samples from each env)
# Note numbers are slightly different here because of 0 fungal KOs in some samples
ko_meta_subset26 <- ko_meta %>%
filter(sampleID %in% subset26$sampleID)
ko_comm_DESeq_subset26 <- ko_comm_DESeq %>%
filter(rownames(.) %in% rownames(ko_meta_subset26))
sum(rownames(ko_comm_DESeq_subset26) != rownames(ko_meta_subset26))
table(ko_meta_subset26$Environment)
bc_ko <- vegdist(ko_comm_DESeq_subset26, method = "bray")
pcoa_ko <- cmdscale(bc_ko, k = nrow(ko_meta_subset26) - 1, eig = T)
pcoaA1 <- round((eigenvals(pcoa_ko)/sum(eigenvals(pcoa_ko)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa_ko)/sum(eigenvals(pcoa_ko)))[2]*100, digits = 1)
ko_meta_subset26$Axis01 <- scores(pcoa_ko)[,1]
ko_meta_subset26$Axis02 <- scores(pcoa_ko)[,2]
micro.hulls <- ddply(ko_meta_subset26, c("Environment"), find_hull)
g7_ko <- ggplot(ko_meta_subset26, aes(Axis01, Axis02, colour = Environment)) +
geom_polygon(data = micro.hulls, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Site",
title = "KO Bray-Curtis") +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g7_ko
jac_ko <- vegdist(ko_comm_DESeq_subset26, method = "jaccard")
pcoa1_ko <- cmdscale(jac_ko, k = nrow(ko_meta_subset26) - 1, eig = T)
pcoa1A1 <- round((eigenvals(pcoa1_ko)/sum(eigenvals(pcoa1_ko)))[1]*100, digits = 1)
pcoa1A2 <- round((eigenvals(pcoa1_ko)/sum(eigenvals(pcoa1_ko)))[2]*100, digits = 1)
ko_meta_subset26$Axis01j <- scores(pcoa1_ko)[,1]
ko_meta_subset26$Axis02j <- scores(pcoa1_ko)[,2]
micro.hullsj <- ddply(ko_meta_subset26, c("Environment"), find_hullj)
g8_ko <- ggplot(ko_meta_subset26, aes(Axis01j, Axis02j, colour = Environment)) +
geom_polygon(data = micro.hullsj, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5) +
labs(x = paste("PC1: ", pcoa1A1, "%", sep = ""),
y = paste("PC2: ", pcoa1A2, "%", sep = ""),
colour = "Environment",
title = "KO Jaccard") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g8_ko
pdf("Figs/KO_PCoA_n26.pdf", width = 8.5, height = 3.5)
plot_grid(g7_ko, g8_ko, ko_pcoa_leg, align = "hv", ncol = 3, rel_widths = c(2.5,2.5,1))
dev.off()
#### __Stats ####
# Rerun whichever richness filter you want, then run this
set.seed(308)
adonis2(bc_ko ~ Environment, data = ko_meta_filt) # R2 = 0.18, p = 0.001
anova(betadisper(bc_ko, ko_meta_filt$Environment)) # Dispersion not homogeneous
# Subset 26 (rerun that section first)
set.seed(308)
adonis2(bc_ko ~ Environment, data = ko_meta_subset26) # R2 = 0.13, p = 0.002
anova(betadisper(bc_ko, ko_meta_subset26$Environment)) # Dispersion not homogeneous
set.seed(308)
adonis2(jac_ko ~ ko_meta_subset26$Environment) # R2 = 0.12, p = 0.002
anova(betadisper(jac_ko, ko_meta_subset26$Environment)) # Dispersion not homogeneous
set.seed(308)
adonis2(bc_ko ~ ko_meta_subset26$Assembler) # R2 = 0.14, p = 0.084
anova(betadisper(bc_ko, ko_meta_subset26$Assembler)) # Dispersion not homogeneous
set.seed(308)
adonis2(bc_ko ~ ko_meta_subset26$Year) # R2 = 0.07, p = 0.312
anova(betadisper(bc_ko, ko_meta_subset26$Year)) # Dispersion homogeneous
bc_ko <- vegdist(ko_comm_DESeq_filt, method = "bray")
jac_ko <- vegdist(ko_comm_DESeq_filt, method = "jaccard")
#### __Stats ####
# Rerun whichever richness filter you want, then run this
set.seed(308)
adonis2(bc_ko ~ Environment, data = ko_meta_filt) # R2 = 0.18, p = 0.001
anova(betadisper(bc_ko, ko_meta_filt$Environment)) # Dispersion not homogeneous
set.seed(308)
adonis2(jac_ko ~ ko_meta_filt$Environment) # R2 = 0.17, p = 0.001
anova(betadisper(jac_ko, ko_meta_filt$Environment)) # Dispersion not homogeneous
#### __Drivers/Indicators ####
# KO MULTIPATT (list KOs associated with each group)
set.seed(425)
mp <- multipatt(ko_comm_DESeq,
ko_meta$Environment,
func = "IndVal.g",
control = how(nperm=999))
#### _KO Individual ####
# Extract and analyze list of KOs of interest
# Need to get list of KOs from Lara/Quandt Lab
# For now make barplot and heatmap of top KOs to develop script
# To rerun with another list of KOs, just update the lines below
# Data frame
gene_plot <- data.frame("Environment" = as.factor(ko_meta$Environment),
K03164 = ko_comm_DESeq$K03164,
K10955 = ko_comm_DESeq$K10955,
K00777 = ko_comm_DESeq$K00777,
K06867 = ko_comm_DESeq$K06867,
K03006 = ko_comm_DESeq$K03006,
K03010 = ko_comm_DESeq$K03010,
K05658 = ko_comm_DESeq$K05658,
K00698 = ko_comm_DESeq$K00698,
K15503 = ko_comm_DESeq$K15503,
K12811 = ko_comm_DESeq$K12811)
#### __ (I) Stats ####
# Run a loop
kruskal_results_genes <- as.data.frame(matrix(data = NA, 11, 3)) %>%
set_names(c("Gene", "X2", "P"))
for (i in 2:11) {
k <- kruskal.test(gene_plot[[i]] ~ gene_plot$Environment)
kruskal_results_genes$Gene[i] <- names(gene_plot)[i]
kruskal_results_genes$X2[i] <- round(k$statistic, digits = 2)
kruskal_results_genes$P[i] <- k$p.value
}
kruskal_results_genes <- kruskal_results_genes %>%
filter(is.na(Gene) == F) %>%
mutate(Pfdr = p.adjust(P, method = "fdr"))
#### __ (II) Graphs ####
# Barplot
table(ko_meta$Environment)
gene_plot_long <- gene_plot %>%
pivot_longer(c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"),
names_to = "Gene", values_to = "Abundance") %>%
mutate(Gene = factor(Gene,
levels = c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"))) %>%
droplevels() %>%
mutate(Environment = dplyr::recode_factor(Environment,
"Acid mine drainage" = "Acid mine drainage (n = 33)",
"Cryosphere" = "Cryosphere (n = 47)",
"Desert" = "Desert (n = 33)",
"Glacial forefield" = "Glacial forefield (n = 60)",
"Hot spring" = "Hot spring (n = 167)",
"Hydrothermal vent" = "Hydrothermal vent (n = 237)",
"Hypersaline" = "Hypersaline (n = 225)",
"Soda lake" = "Soda lake (n = 25)"))
gene_plot_summary <- gene_plot_long %>%
group_by(Environment, Gene) %>%
summarise(mean = mean(Abundance),
se = std.error(Abundance))
pdf("Figs/KO_Barplot_Top.pdf", width = 8, height = 5)
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)",
fill = "KO") +
scale_fill_manual(values = brewer.pal(10, "Paired"),
labels = ko_list$KO_def[1:10]) +
scale_y_continuous(expand = c(0.01, 0.01)) +
theme_classic() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1),
legend.text = element_text(size = 8),
legend.key.size = unit(0.5, "cm"),
legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank(),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.7), "cm"))
dev.off()
# Heatmap
# Use pheatmap (pretty heatmap) package
gene_hm <- data.frame("sampleID" = ko_meta$sampleID,
K03164 = ko_comm_DESeq$K03164,
K10955 = ko_comm_DESeq$K10955,
K00777 = ko_comm_DESeq$K00777,
K06867 = ko_comm_DESeq$K06867,
K03006 = ko_comm_DESeq$K03006,
K03010 = ko_comm_DESeq$K03010,
K05658 = ko_comm_DESeq$K05658,
K00698 = ko_comm_DESeq$K00698,
K15503 = ko_comm_DESeq$K15503,
K12811 = ko_comm_DESeq$K12811) %>%
column_to_rownames(var = "sampleID") %>%
t() %>%
as.matrix()
ann_cols <- data.frame(row.names = colnames(gene_hm),
Environment = ko_meta$Environment)
ann_colors <- list(Environment = c("Acid mine drainage" = hue_pal()(8)[1],
"Cryosphere" = hue_pal()(8)[2],
"Desert" = hue_pal()(8)[3],
"Glacial forefield" = hue_pal()(8)[4],
"Hot spring" = hue_pal()(8)[5],
"Hydrothermal vent" = hue_pal()(8)[6],
"Hypersaline" = hue_pal()(8)[7],
"Soda lake" = hue_pal()(8)[8]))
phm1 <- pheatmap(gene_hm,
scale = "row",
show_colnames = F,
cluster_rows = F,
annotation_col = ann_cols,
annotation_colors = ann_colors)
save_pheatmap_pdf(phm1, "Figs/KO_heatmap_Top.pdf")
#### ..........................####
#### Other ####
#### _Map ####
# Sample map with ggplot, color by environment
# Need to adjust color scheme here and throughout
world <- map_data("world")
input$map_loaded$Latitude <- as.numeric(input$map_loaded$Latitude)
input$map_loaded$Longitude <- as.numeric(input$map_loaded$Longitude)
# 21 missing
pdf("Figs/SampleMap.pdf", width = 8, height = 5)
ggplot() +
geom_map(data = world, map = world,
aes(long, lat, map_id = region),
color = "white", fill = "lightgray", size = 0.1) +
geom_point(data = input$map_loaded, aes(x = Longitude, y = Latitude,
colour = Environment),
size = 1, alpha = 0.5) +
theme_void() +
labs(x = NULL,
y = NULL) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 2))) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
dev.off()
# Could also try plot by location with environment facets
# mctoolsR only accepts one factor, so need to combine then split
input_fungi_CPM$map_loaded$EnvGeo <- paste(input_fungi_CPM$map_loaded$Environment,
input_fungi_CPM$map_loaded$Geographic.Location,
sep = "_")
tax_sum_Phyla <- summarize_taxonomy(input_fungi_CPM, level = 2, report_higher_tax = F, relative = F)
barsPhyla <- plot_taxa_bars(tax_sum_Phyla,
input_fungi_CPM$map_loaded,
type_header = c("EnvGeo"),
num_taxa = ntax,
data_only = T) %>%
mutate(taxon = fct_rev(taxon)) %>%
separate(group_by, into = c("Environment", "Location"), sep = "_")
pdf("Figs/CPM_Phyla_EnvGeo.pdf", width = 12, height = 8)
ggplot(barsPhyla, aes(reorder(Location, -mean_value, mean), mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = NULL, y = "Abundance (CPM)", fill = "Phylum") +
scale_fill_manual(values = brewer.pal(12, "Paired")[7:1]) +
scale_y_continuous(expand = c(0, 0)) +
facet_grid(~ Environment, scales = "free_x", space = "free") +
theme_classic() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 2, angle = 45, hjust = 1, vjust = 1,
margin = unit(c(-1,0,0,0), "pt")),
legend.text = element_text(size = 8),
legend.key.size = unit(0.5, "cm"),
legend.position = c(0.9, 0.5),
strip.text = element_text(size = 8, angle = 90, hjust = 0),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.5), "cm"))
dev.off()
ggplot(input_fungi_CPM$map_loaded, aes(reorder(Environment, totalFun, mean), totalFun)) +
# geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 1, alpha = 0.2, width = 0.4) +
geom_text(data = nyi_let2, aes(Environment, y, label = label),
size = 4, color = "black") +
labs(x = NULL, y = "Fungal abundance (CPM)") +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
strip.text = element_text(size = 10))
pdf("Figs/FungalCPM.pdf", width = 5, height = 4)
ggplot(input_fungi_CPM$map_loaded, aes(reorder(Environment, totalFun, mean), totalFun)) +
# geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 1, alpha = 0.2, width = 0.4) +
geom_text(data = nyi_let2, aes(Environment, y, label = label),
size = 4, color = "black") +
labs(x = NULL, y = "Fungal abundance (CPM)") +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
strip.text = element_text(size = 10))
dev.off()
ggplot(input$map_loaded, aes(reorder(Environment, Fungi, mean), Fungi)) +
# geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 1, alpha = 0.2, width = 0.4) +
geom_text(data = nyi_let1, aes(Environment, y, label = label),
size = 4, color = "black") +
labs(x = NULL, y = "Fungal relative abundance") +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
strip.text = element_text(size = 10))
pdf("Figs/FungalRel.pdf", width = 5, height = 4)
ggplot(input$map_loaded, aes(reorder(Environment, Fungi, mean), Fungi)) +
# geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 1, alpha = 0.2, width = 0.4) +
geom_text(data = nyi_let1, aes(Environment, y, label = label),
size = 4, color = "black") +
labs(x = NULL, y = "Fungal relative abundance") +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
strip.text = element_text(size = 10))
dev.off()
# Add legend
pdf("Figs/Pies_Classes.pdf", width = 8.5, height = 6.5)
plot_grid(pies_c, pie_leg_c, rel_widths = c(4, 1))
dev.off()
# Add legend
pdf("Figs/Pies_Phyla.pdf", width = 8.5, height = 6.5)
plot_grid(pies, pie_leg, rel_widths = c(4, 1))
dev.off()
ggplot(env_prev_long, aes(reorder(Environment, value, mean), value,
group = Environment, fill = variable)) +
geom_bar(stat = "identity") +
geom_text(data = env_prev,
aes(reorder(Environment, num_samples, mean), num_samples+10,
label = num_samples), inherit.aes = F) +
scale_fill_manual(values = c("#F8766D", "#619CFF"),
breaks = c("num_absent", "num_present"),
labels = c("Absent", "Present")) +
labs(x = NULL,
y = "Sample size",
fill = "Fungi") +
ggtitle("Total sample size = 1131\nSamples with Fungi = 925") +
theme_bw() +
theme(legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_blank(),
axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
pdf("Figs/SampleSize.pdf", width = 5, height = 4.5)
ggplot(env_prev_long, aes(reorder(Environment, value, mean), value,
group = Environment, fill = variable)) +
geom_bar(stat = "identity") +
geom_text(data = env_prev,
aes(reorder(Environment, num_samples, mean), num_samples+10,
label = num_samples), inherit.aes = F) +
scale_fill_manual(values = c("#F8766D", "#619CFF"),
breaks = c("num_absent", "num_present"),
labels = c("Absent", "Present")) +
labs(x = NULL,
y = "Sample size",
fill = "Fungi") +
ggtitle("Total sample size = 1131\nSamples with Fungi = 925") +
theme_bw() +
theme(legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_blank(),
axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
dev.off()
