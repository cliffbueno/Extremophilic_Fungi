"Velvet + MetaVelvet at multiple Kmers followed by Minimus2 on all assemblies" = "Multiple",
"Velvet, MetaVelvet, Minimus" = "Multiple")
levels(input_fungi_CPM_nz$map_loaded$Assembler)
input_fungi_CPM_nz$map_loaded <- input_fungi_CPM_nz$map_loaded %>%
mutate_all(na_if,"")
class(input_fungi_CPM_nz$map_loaded$Assembler)
class(input_fungi_CPM_nz$map_loaded$Assembler)
input_fungi_CPM_nz$map_loaded$Assembler <- dplyr::recode_factor(input_fungi_CPM_nz$map_loaded$`Assembly.Method`,
"AbySS v1.5.0" = "AbySS",
"canu v. 1.7" = "Canu",
"canu v. 1.8" = "Canu",
"canu v. 1.9" = "Canu",
"Celera WGS Assembler v5.3" = "Celera",
"Celera, Phrap" = "Multiple",
"CLC Bio package" = "CLC",
"CLC Genomics" = "CLC",
"CLC genomics wb7" = "CLC",
"CLC genomics workbench" = "CLC",
"CLC genomics workbench, v. 7.0" = "CLC",
"Custom JGI assembly, Nielsen et. al." = "Custom JGI",
"Custom JGI assembly." = "Custom JGI",
"JGI custom assembly Copeland et. al" = "Custom JGI",
"IDBA" = "IDBA",
"IDBA 1.1.1 PRE correction" = "IDBA",
"idba v. 1.1.1" = "IDBA",
"IDBA v. 1.1.1" = "IDBA",
"IDBA_1.1.1 PRE_correction" = "IDBA",
"IDBA_UD" = "IDBA_UD",
"idba_ud 1.1.1" = "IDBA_UD",
"IDBA_UD k52-k92 step10" = "IDBA_UD",
"IDBA_UD k52-k92 step10 - contigs greater than or equal to 1kb and less than 4kb" = "IDBA_UD",
"IDBA_UD k52-k92 step10 - contigs greater than or equal to 4kb" = "IDBA_UD",
"IDBA_UD k52-k92 step10 - contigs less than 1kb" = "IDBA_UD",
"idba_ud v 1.1.1" = "IDBA_UD",
"idba_ud v. 1.1.1" = "IDBA_UD",
"IDBA_UD v. 1.1.1" = "IDBA_UD",
"IDBA-UD" = "IDBA_UD",
"IDBA-UD 1.1.3" = "IDBA_UD",
"IDBA-ud v. 1.1.1" = "IDBA_UD",
"IDBA-UD v. 1.1.1" = "IDBA_UD",
"idba.1.1.1" = "IDBA",
"lucy / pga" = "Multiple",
"Megahit" = "MEGAHIT",
"MEGAHit" = "MEGAHIT",
"MEGAHIT v. 0.2.0" = "MEGAHIT",
"MegaHit v. 1.02" = "MEGAHIT",
"MEGAHIT v. 1.0.3" = "MEGAHIT",
"MEGAHIT v. 1.1.1" = "MEGAHIT",
"megahit v. 1.1.3" = "MEGAHIT",
"Megahit v. 1.1.3" = "MEGAHIT",
"MegaHIT v. 1.2.9" = "MEGAHIT",
"MEGAHIT v. MEGAHIT v0.2.0" = "MEGAHIT",
"MEGAHIT v. MEGAHIT v1.0.3" = "MEGAHIT",
"MEGAHIT v. MEGAHIT v1.0.6" = "MEGAHIT",
"MEGAHIT v. 1.0.6" = "MEGAHIT",
"MEGAHIT v.1.0.3" = "MEGAHIT",
"MEGAN" = "MEGAN",
"metaSPAdes" = "metaSPAdes",
"metaSPAdes v. 3.10.0" = "metaSPAdes",
"metaspades v. 3.13.0" = "metaSPAdes",
"metaspades v. 3.14.1" = "metaSPAdes",
"metaSPAdes v. 3.7.1" = "metaSPAdes",
"metaSPAdes v3.10, CLC genomic workbench v7.5.1" = "metaSPAdes",
"metaSPAdes v3.10.1" = "metaSPAdes",
"Metavelvet" = "MetaVelvet",
"MetaVelvet - v1.2.01" = "MetaVelvet",
"MetaVelvet 1.2.02" = "MetaVelvet",
"metavelvet v. 1.2.02" = "MetaVelvet",
"Metavelvet v. 1.2.02" = "MetaVelvet",
"mira 3.0.4" = "MIRA",
"MIRA 4.9.5_2" = "MIRA",
"Newbler" = "Newbler",
"Newbler and/or Velvet" = "Multiple",
"Newbler v. 2.5" = "Newbler",
"Newbler v. 2.5.3" = "Newbler",
"Newbler v2.7" = "Newbler",
"pga" = "PGA",
"Ray 2.3.1" = "Ray",
"Ray 2.3.1 (no min length)" = "Ray",
"reassembled with IDBA_UD" = "IDBA_UD",
"reassembly by IDBA-UD" = "IDBA_UD",
"reassembly with IDBA_UD" = "IDBA_UD",
"reassembly with IDBA-UD" = "IDBA_UD",
"SAPDES" = "SPAdes",
"Soap denovo and minimus" = "Multiple",
"SOAPdenovo v2.04" = "SOAPdenovo",
"SOAPdenovo,newbler,minimus2 v. Version 1.05: testing... 2010,(v2.8 (20120726_1306)),AMOS/3.1.0" = "SOAPdenovo",
"Spades" = "SPAdes",
"SPADES" = "SPAdes",
"spades 3.0" = "SPAdes",
"Spades 3.6.1" = "SPAdes",
"SPAdes 3.7.1" = "SPAdes",
"SPAdes 3.8.0" = "SPAdes",
"Spades v. 3.10" = "SPAdes",
"SPAdes v. 3.11.0" = "SPAdes",
"spades v. 3.11.1" = "SPAdes",
"Spades v. 3.11.1" = "SPAdes",
"SPAdes v. 3.11.1" = "SPAdes",
"spades v. 3.12.0" = "SPAdes",
"Spades v. 3.12.0" = "SPAdes",
"spades v. 3.13.0" = "SPAdes",
"SPades v. 3.13.0" = "SPAdes",
"SPAdes v. 3.6.0" = "SPAdes",
"SPAdes v. 3.9.0" = "SPAdes",
"spades v. SPAdes version: 3.10.1" = "SPAdes",
"spades v. SPAdes version: 3.11.1-check" = "SPAdes",
"SPADES v3.6.1" = "SPAdes",
"Spades_3.6" = "SPAdes",
"SPAdes3.1.0" = "SPAdes",
"Unknown" = "Unknown",
"Unkown" = "Unknown",
"^$" = "Unknown",
"Velvet" = "Velvet",
"Velvet + MetaVelvet at multiple Kmers" = "Multiple",
"Velvet + MetaVelvet at multiple Kmers followed by Minimus2 on all assemblies" = "Multiple",
"Velvet, MetaVelvet, Minimus" = "Multiple")
levels(input_fungi_CPM_nz$map_loaded$Assembler)
input_fungi_CPM_nz$map_loaded$Assembler <- dplyr::recode_factor(input_fungi_CPM_nz$map_loaded$`Assembly.Method`,
"AbySS v1.5.0" = "AbySS",
"canu v. 1.7" = "Canu",
"canu v. 1.8" = "Canu",
"canu v. 1.9" = "Canu",
"Celera WGS Assembler v5.3" = "Celera",
"Celera, Phrap" = "Multiple",
"CLC Bio package" = "CLC",
"CLC Genomics" = "CLC",
"CLC genomics wb7" = "CLC",
"CLC genomics workbench" = "CLC",
"CLC genomics workbench, v. 7.0" = "CLC",
"Custom JGI assembly, Nielsen et. al." = "Custom JGI",
"Custom JGI assembly." = "Custom JGI",
"JGI custom assembly Copeland et. al" = "Custom JGI",
"IDBA" = "IDBA",
"IDBA 1.1.1 PRE correction" = "IDBA",
"idba v. 1.1.1" = "IDBA",
"IDBA v. 1.1.1" = "IDBA",
"IDBA_1.1.1 PRE_correction" = "IDBA",
"IDBA_UD" = "IDBA_UD",
"idba_ud 1.1.1" = "IDBA_UD",
"IDBA_UD k52-k92 step10" = "IDBA_UD",
"IDBA_UD k52-k92 step10 - contigs greater than or equal to 1kb and less than 4kb" = "IDBA_UD",
"IDBA_UD k52-k92 step10 - contigs greater than or equal to 4kb" = "IDBA_UD",
"IDBA_UD k52-k92 step10 - contigs less than 1kb" = "IDBA_UD",
"idba_ud v 1.1.1" = "IDBA_UD",
"idba_ud v. 1.1.1" = "IDBA_UD",
"IDBA_UD v. 1.1.1" = "IDBA_UD",
"IDBA-UD" = "IDBA_UD",
"IDBA-UD 1.1.3" = "IDBA_UD",
"IDBA-ud v. 1.1.1" = "IDBA_UD",
"IDBA-UD v. 1.1.1" = "IDBA_UD",
"idba.1.1.1" = "IDBA",
"lucy / pga" = "Multiple",
"Megahit" = "MEGAHIT",
"MEGAHit" = "MEGAHIT",
"MEGAHIT v. 0.2.0" = "MEGAHIT",
"MegaHit v. 1.02" = "MEGAHIT",
"MEGAHIT v. 1.0.3" = "MEGAHIT",
"MEGAHIT v. 1.1.1" = "MEGAHIT",
"megahit v. 1.1.3" = "MEGAHIT",
"Megahit v. 1.1.3" = "MEGAHIT",
"MegaHIT v. 1.2.9" = "MEGAHIT",
"MEGAHIT v. MEGAHIT v0.2.0" = "MEGAHIT",
"MEGAHIT v. MEGAHIT v1.0.3" = "MEGAHIT",
"MEGAHIT v. MEGAHIT v1.0.6" = "MEGAHIT",
"MEGAHIT v. 1.0.6" = "MEGAHIT",
"MEGAHIT v.1.0.3" = "MEGAHIT",
"MEGAN" = "MEGAN",
"metaSPAdes" = "metaSPAdes",
"metaSPAdes v. 3.10.0" = "metaSPAdes",
"metaspades v. 3.13.0" = "metaSPAdes",
"metaspades v. 3.14.1" = "metaSPAdes",
"metaSPAdes v. 3.7.1" = "metaSPAdes",
"metaSPAdes v3.10, CLC genomic workbench v7.5.1" = "metaSPAdes",
"metaSPAdes v3.10.1" = "metaSPAdes",
"Metavelvet" = "MetaVelvet",
"MetaVelvet - v1.2.01" = "MetaVelvet",
"MetaVelvet 1.2.02" = "MetaVelvet",
"metavelvet v. 1.2.02" = "MetaVelvet",
"Metavelvet v. 1.2.02" = "MetaVelvet",
"mira 3.0.4" = "MIRA",
"MIRA 4.9.5_2" = "MIRA",
"Newbler" = "Newbler",
"Newbler and/or Velvet" = "Multiple",
"Newbler v. 2.5" = "Newbler",
"Newbler v. 2.5.3" = "Newbler",
"Newbler v2.7" = "Newbler",
"pga" = "PGA",
"Ray 2.3.1" = "Ray",
"Ray 2.3.1 (no min length)" = "Ray",
"reassembled with IDBA_UD" = "IDBA_UD",
"reassembly by IDBA-UD" = "IDBA_UD",
"reassembly with IDBA_UD" = "IDBA_UD",
"reassembly with IDBA-UD" = "IDBA_UD",
"SAPDES" = "SPAdes",
"Soap denovo and minimus" = "Multiple",
"SOAPdenovo v2.04" = "SOAPdenovo",
"SOAPdenovo,newbler,minimus2 v. Version 1.05: testing... 2010,(v2.8 (20120726_1306)),AMOS/3.1.0" = "SOAPdenovo",
"Spades" = "SPAdes",
"SPADES" = "SPAdes",
"spades 3.0" = "SPAdes",
"Spades 3.6.1" = "SPAdes",
"SPAdes 3.7.1" = "SPAdes",
"SPAdes 3.8.0" = "SPAdes",
"Spades v. 3.10" = "SPAdes",
"SPAdes v. 3.11.0" = "SPAdes",
"spades v. 3.11.1" = "SPAdes",
"Spades v. 3.11.1" = "SPAdes",
"SPAdes v. 3.11.1" = "SPAdes",
"spades v. 3.12.0" = "SPAdes",
"Spades v. 3.12.0" = "SPAdes",
"spades v. 3.13.0" = "SPAdes",
"SPades v. 3.13.0" = "SPAdes",
"SPAdes v. 3.6.0" = "SPAdes",
"SPAdes v. 3.9.0" = "SPAdes",
"spades v. SPAdes version: 3.10.1" = "SPAdes",
"spades v. SPAdes version: 3.11.1-check" = "SPAdes",
"SPADES v3.6.1" = "SPAdes",
"Spades_3.6" = "SPAdes",
"SPAdes3.1.0" = "SPAdes",
"Unknown" = "Unknown",
"Unkown" = "Unknown",
#"" = "Unknown",
"Velvet" = "Velvet",
"Velvet + MetaVelvet at multiple Kmers" = "Multiple",
"Velvet + MetaVelvet at multiple Kmers followed by Minimus2 on all assemblies" = "Multiple",
"Velvet, MetaVelvet, Minimus" = "Multiple")
levels(input_fungi_CPM_nz$map_loaded$Assembler)
table(input_fungi_CPM_nz$map_loaded$Assembler)
class(input_fungi_CPM_nz$map_loaded$Assembler)
input_fungi_CPM_nz$map_loaded <- input_fungi_CPM_nz$map_loaded %>%
mutate_at(.vars = c("Assembler"),
.funs = list(~ifelse(.=="", NA, as.character(.))))
levels(input_fungi_CPM_nz$map_loaded$Assembler)
input_fungi_CPM_nz$map_loaded <- input_fungi_CPM_nz$map_loaded %>%
mutate_at(.vars = c("Assembler"),
.funs = list(~ifelse(.=="", NA, as.character(.)))) %>%
mutate(Assembler = as.factor(Assembler))
levels(input_fungi_CPM_nz$map_loaded$Assembler)
input_fungi_CPM_nz$map_loaded$Assembler <- dplyr::recode_factor(input_fungi_CPM_nz$map_loaded$`Assembly.Method`,
"AbySS v1.5.0" = "AbySS",
"canu v. 1.7" = "Canu",
"canu v. 1.8" = "Canu",
"canu v. 1.9" = "Canu",
"Celera WGS Assembler v5.3" = "Celera",
"Celera, Phrap" = "Multiple",
"CLC Bio package" = "CLC",
"CLC Genomics" = "CLC",
"CLC genomics wb7" = "CLC",
"CLC genomics workbench" = "CLC",
"CLC genomics workbench, v. 7.0" = "CLC",
"Custom JGI assembly, Nielsen et. al." = "Custom JGI",
"Custom JGI assembly." = "Custom JGI",
"JGI custom assembly Copeland et. al" = "Custom JGI",
"IDBA" = "IDBA",
"IDBA 1.1.1 PRE correction" = "IDBA",
"idba v. 1.1.1" = "IDBA",
"IDBA v. 1.1.1" = "IDBA",
"IDBA_1.1.1 PRE_correction" = "IDBA",
"IDBA_UD" = "IDBA_UD",
"idba_ud 1.1.1" = "IDBA_UD",
"IDBA_UD k52-k92 step10" = "IDBA_UD",
"IDBA_UD k52-k92 step10 - contigs greater than or equal to 1kb and less than 4kb" = "IDBA_UD",
"IDBA_UD k52-k92 step10 - contigs greater than or equal to 4kb" = "IDBA_UD",
"IDBA_UD k52-k92 step10 - contigs less than 1kb" = "IDBA_UD",
"idba_ud v 1.1.1" = "IDBA_UD",
"idba_ud v. 1.1.1" = "IDBA_UD",
"IDBA_UD v. 1.1.1" = "IDBA_UD",
"IDBA-UD" = "IDBA_UD",
"IDBA-UD 1.1.3" = "IDBA_UD",
"IDBA-ud v. 1.1.1" = "IDBA_UD",
"IDBA-UD v. 1.1.1" = "IDBA_UD",
"idba.1.1.1" = "IDBA",
"lucy / pga" = "Multiple",
"Megahit" = "MEGAHIT",
"MEGAHit" = "MEGAHIT",
"MEGAHIT v. 0.2.0" = "MEGAHIT",
"MegaHit v. 1.02" = "MEGAHIT",
"MEGAHIT v. 1.0.3" = "MEGAHIT",
"MEGAHIT v. 1.1.1" = "MEGAHIT",
"megahit v. 1.1.3" = "MEGAHIT",
"Megahit v. 1.1.3" = "MEGAHIT",
"MegaHIT v. 1.2.9" = "MEGAHIT",
"MEGAHIT v. MEGAHIT v0.2.0" = "MEGAHIT",
"MEGAHIT v. MEGAHIT v1.0.3" = "MEGAHIT",
"MEGAHIT v. MEGAHIT v1.0.6" = "MEGAHIT",
"MEGAHIT v. 1.0.6" = "MEGAHIT",
"MEGAHIT v.1.0.3" = "MEGAHIT",
"MEGAN" = "MEGAN",
"metaSPAdes" = "metaSPAdes",
"metaSPAdes v. 3.10.0" = "metaSPAdes",
"metaspades v. 3.13.0" = "metaSPAdes",
"metaspades v. 3.14.1" = "metaSPAdes",
"metaSPAdes v. 3.7.1" = "metaSPAdes",
"metaSPAdes v3.10, CLC genomic workbench v7.5.1" = "metaSPAdes",
"metaSPAdes v3.10.1" = "metaSPAdes",
"Metavelvet" = "MetaVelvet",
"MetaVelvet - v1.2.01" = "MetaVelvet",
"MetaVelvet 1.2.02" = "MetaVelvet",
"metavelvet v. 1.2.02" = "MetaVelvet",
"Metavelvet v. 1.2.02" = "MetaVelvet",
"mira 3.0.4" = "MIRA",
"MIRA 4.9.5_2" = "MIRA",
"Newbler" = "Newbler",
"Newbler and/or Velvet" = "Multiple",
"Newbler v. 2.5" = "Newbler",
"Newbler v. 2.5.3" = "Newbler",
"Newbler v2.7" = "Newbler",
"pga" = "PGA",
"Ray 2.3.1" = "Ray",
"Ray 2.3.1 (no min length)" = "Ray",
"reassembled with IDBA_UD" = "IDBA_UD",
"reassembly by IDBA-UD" = "IDBA_UD",
"reassembly with IDBA_UD" = "IDBA_UD",
"reassembly with IDBA-UD" = "IDBA_UD",
"SAPDES" = "SPAdes",
"Soap denovo and minimus" = "Multiple",
"SOAPdenovo v2.04" = "SOAPdenovo",
"SOAPdenovo,newbler,minimus2 v. Version 1.05: testing... 2010,(v2.8 (20120726_1306)),AMOS/3.1.0" = "SOAPdenovo",
"Spades" = "SPAdes",
"SPADES" = "SPAdes",
"spades 3.0" = "SPAdes",
"Spades 3.6.1" = "SPAdes",
"SPAdes 3.7.1" = "SPAdes",
"SPAdes 3.8.0" = "SPAdes",
"Spades v. 3.10" = "SPAdes",
"SPAdes v. 3.11.0" = "SPAdes",
"spades v. 3.11.1" = "SPAdes",
"Spades v. 3.11.1" = "SPAdes",
"SPAdes v. 3.11.1" = "SPAdes",
"spades v. 3.12.0" = "SPAdes",
"Spades v. 3.12.0" = "SPAdes",
"spades v. 3.13.0" = "SPAdes",
"SPades v. 3.13.0" = "SPAdes",
"SPAdes v. 3.6.0" = "SPAdes",
"SPAdes v. 3.9.0" = "SPAdes",
"spades v. SPAdes version: 3.10.1" = "SPAdes",
"spades v. SPAdes version: 3.11.1-check" = "SPAdes",
"SPADES v3.6.1" = "SPAdes",
"Spades_3.6" = "SPAdes",
"SPAdes3.1.0" = "SPAdes",
"Unknown" = "Unknown",
"Unkown" = "Unknown",
#"" = "Unknown",
"Velvet" = "Velvet",
"Velvet + MetaVelvet at multiple Kmers" = "Multiple",
"Velvet + MetaVelvet at multiple Kmers followed by Minimus2 on all assemblies" = "Multiple",
"Velvet, MetaVelvet, Minimus" = "Multiple")
input_fungi_CPM_nz$map_loaded <- input_fungi_CPM_nz$map_loaded %>%
mutate_at(.vars = c("Assembler"),
.funs = list(~ifelse(.=="", NA, as.character(.)))) %>%
mutate(Assembler = as.factor(Assembler))
levels(input_fungi_CPM_nz$map_loaded$Assembler)
# Also check latitude. For this need to remove NAs
input_fungi_CPM_nz_lat <- filter_data(input_fungi_CPM_nz,
filter_cat = "Latitude",
filter_vals = NA)
Genus_nz_lat <- summarize_taxonomy(input_fungi_CPM_nz_lat,
level = 6,
report_higher_tax = F,
relative = F)
bc_lat <- calc_dm(Genus_nz_lat)
set.seed(1150)
adonis2(bc_lat ~ Environment + Year + Assembly.Method + Latitude,
data = input_fungi_CPM_nz_lat$map_loaded)
set.seed(1150)
adonis2(bc_lat ~ Environment + Year + Assembler + Latitude,
data = input_fungi_CPM_nz_lat$map_loaded)
input_fungi_CPM_nz_lat$map_loaded$Assembler
input_fungi_CPM_nz$map_loaded <- input_fungi_CPM_nz$map_loaded %>%
mutate_at(.vars = c("Assembler"),
.funs = list(~ifelse(.=="", NA, as.character(.)))) %>%
mutate(Assembler = as.factor(Assembler)) %>%
replace_na(Assembler, "Unknown")
View(input_fungi_CPM_nz$map_loaded)
input_fungi_CPM_nz$map_loaded$Assembler <- dplyr::recode_factor(input_fungi_CPM_nz$map_loaded$`Assembly.Method`,
"AbySS v1.5.0" = "AbySS",
"canu v. 1.7" = "Canu",
"canu v. 1.8" = "Canu",
"canu v. 1.9" = "Canu",
"Celera WGS Assembler v5.3" = "Celera",
"Celera, Phrap" = "Multiple",
"CLC Bio package" = "CLC",
"CLC Genomics" = "CLC",
"CLC genomics wb7" = "CLC",
"CLC genomics workbench" = "CLC",
"CLC genomics workbench, v. 7.0" = "CLC",
"Custom JGI assembly, Nielsen et. al." = "Custom JGI",
"Custom JGI assembly." = "Custom JGI",
"JGI custom assembly Copeland et. al" = "Custom JGI",
"IDBA" = "IDBA",
"IDBA 1.1.1 PRE correction" = "IDBA",
"idba v. 1.1.1" = "IDBA",
"IDBA v. 1.1.1" = "IDBA",
"IDBA_1.1.1 PRE_correction" = "IDBA",
"IDBA_UD" = "IDBA_UD",
"idba_ud 1.1.1" = "IDBA_UD",
"IDBA_UD k52-k92 step10" = "IDBA_UD",
"IDBA_UD k52-k92 step10 - contigs greater than or equal to 1kb and less than 4kb" = "IDBA_UD",
"IDBA_UD k52-k92 step10 - contigs greater than or equal to 4kb" = "IDBA_UD",
"IDBA_UD k52-k92 step10 - contigs less than 1kb" = "IDBA_UD",
"idba_ud v 1.1.1" = "IDBA_UD",
"idba_ud v. 1.1.1" = "IDBA_UD",
"IDBA_UD v. 1.1.1" = "IDBA_UD",
"IDBA-UD" = "IDBA_UD",
"IDBA-UD 1.1.3" = "IDBA_UD",
"IDBA-ud v. 1.1.1" = "IDBA_UD",
"IDBA-UD v. 1.1.1" = "IDBA_UD",
"idba.1.1.1" = "IDBA",
"lucy / pga" = "Multiple",
"Megahit" = "MEGAHIT",
"MEGAHit" = "MEGAHIT",
"MEGAHIT v. 0.2.0" = "MEGAHIT",
"MegaHit v. 1.02" = "MEGAHIT",
"MEGAHIT v. 1.0.3" = "MEGAHIT",
"MEGAHIT v. 1.1.1" = "MEGAHIT",
"megahit v. 1.1.3" = "MEGAHIT",
"Megahit v. 1.1.3" = "MEGAHIT",
"MegaHIT v. 1.2.9" = "MEGAHIT",
"MEGAHIT v. MEGAHIT v0.2.0" = "MEGAHIT",
"MEGAHIT v. MEGAHIT v1.0.3" = "MEGAHIT",
"MEGAHIT v. MEGAHIT v1.0.6" = "MEGAHIT",
"MEGAHIT v. 1.0.6" = "MEGAHIT",
"MEGAHIT v.1.0.3" = "MEGAHIT",
"MEGAN" = "MEGAN",
"metaSPAdes" = "metaSPAdes",
"metaSPAdes v. 3.10.0" = "metaSPAdes",
"metaspades v. 3.13.0" = "metaSPAdes",
"metaspades v. 3.14.1" = "metaSPAdes",
"metaSPAdes v. 3.7.1" = "metaSPAdes",
"metaSPAdes v3.10, CLC genomic workbench v7.5.1" = "metaSPAdes",
"metaSPAdes v3.10.1" = "metaSPAdes",
"Metavelvet" = "MetaVelvet",
"MetaVelvet - v1.2.01" = "MetaVelvet",
"MetaVelvet 1.2.02" = "MetaVelvet",
"metavelvet v. 1.2.02" = "MetaVelvet",
"Metavelvet v. 1.2.02" = "MetaVelvet",
"mira 3.0.4" = "MIRA",
"MIRA 4.9.5_2" = "MIRA",
"Newbler" = "Newbler",
"Newbler and/or Velvet" = "Multiple",
"Newbler v. 2.5" = "Newbler",
"Newbler v. 2.5.3" = "Newbler",
"Newbler v2.7" = "Newbler",
"pga" = "PGA",
"Ray 2.3.1" = "Ray",
"Ray 2.3.1 (no min length)" = "Ray",
"reassembled with IDBA_UD" = "IDBA_UD",
"reassembly by IDBA-UD" = "IDBA_UD",
"reassembly with IDBA_UD" = "IDBA_UD",
"reassembly with IDBA-UD" = "IDBA_UD",
"SAPDES" = "SPAdes",
"Soap denovo and minimus" = "Multiple",
"SOAPdenovo v2.04" = "SOAPdenovo",
"SOAPdenovo,newbler,minimus2 v. Version 1.05: testing... 2010,(v2.8 (20120726_1306)),AMOS/3.1.0" = "SOAPdenovo",
"Spades" = "SPAdes",
"SPADES" = "SPAdes",
"spades 3.0" = "SPAdes",
"Spades 3.6.1" = "SPAdes",
"SPAdes 3.7.1" = "SPAdes",
"SPAdes 3.8.0" = "SPAdes",
"Spades v. 3.10" = "SPAdes",
"SPAdes v. 3.11.0" = "SPAdes",
"spades v. 3.11.1" = "SPAdes",
"Spades v. 3.11.1" = "SPAdes",
"SPAdes v. 3.11.1" = "SPAdes",
"spades v. 3.12.0" = "SPAdes",
"Spades v. 3.12.0" = "SPAdes",
"spades v. 3.13.0" = "SPAdes",
"SPades v. 3.13.0" = "SPAdes",
"SPAdes v. 3.6.0" = "SPAdes",
"SPAdes v. 3.9.0" = "SPAdes",
"spades v. SPAdes version: 3.10.1" = "SPAdes",
"spades v. SPAdes version: 3.11.1-check" = "SPAdes",
"SPADES v3.6.1" = "SPAdes",
"Spades_3.6" = "SPAdes",
"SPAdes3.1.0" = "SPAdes",
"Unknown" = "Unknown",
"Unkown" = "Unknown",
#"" = "Unknown",
"Velvet" = "Velvet",
"Velvet + MetaVelvet at multiple Kmers" = "Multiple",
"Velvet + MetaVelvet at multiple Kmers followed by Minimus2 on all assemblies" = "Multiple",
"Velvet, MetaVelvet, Minimus" = "Multiple")
levels(input_fungi_CPM_nz$map_loaded$Assembler)
table(input_fungi_CPM_nz$map_loaded$Assembler)
class(input_fungi_CPM_nz$map_loaded$Assembler)
input_fungi_CPM_nz$map_loaded <- input_fungi_CPM_nz$map_loaded %>%
mutate_at(.vars = c("Assembler"),
.funs = list(~ifelse(.=="", NA, as.character(.)))) %>%
mutate(Assembler = as.factor(Assembler)) %>%
replace_na(list(Assembler = "Unknown"))
levels(input_fungi_CPM_nz$map_loaded$Assembler)
table(input_fungi_CPM_nz$map_loaded$Assembler)
# Also check latitude. For this need to remove NAs
input_fungi_CPM_nz_lat <- filter_data(input_fungi_CPM_nz,
filter_cat = "Latitude",
filter_vals = NA)
Genus_nz_lat <- summarize_taxonomy(input_fungi_CPM_nz_lat,
level = 6,
report_higher_tax = F,
relative = F)
bc_lat <- calc_dm(Genus_nz_lat)
set.seed(1150)
adonis2(bc_lat ~ Environment + Year + Assembler + Latitude,
data = input_fungi_CPM_nz_lat$map_loaded)
table(input_fungi_CPM$map_loaded$Study.Name)
length(table(input_fungi_CPM$map_loaded$Study.Name))
input_fungi_CPM_nz_lat$map_loaded$Year <- as.factor(input_fungi_CPM_nz_lat$map_loaded$Year)
table(input_fungi_CPM_nz_lat$map_loaded$Year)
set.seed(1150)
adonis2(bc_lat ~ Environment + Year + Assembler + Latitude,
data = input_fungi_CPM_nz_lat$map_loaded)
