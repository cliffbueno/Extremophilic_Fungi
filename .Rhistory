plot(mc_a)
qplot(gd_a, bc_a) +
geom_smooth() +
theme_bw()
set.seed(1130)
mc_b <- mantel.correlog(D.eco = bc_b, D.geo = gd_b, r.type = "pearson", nperm = 1000)
plot(mc_b)
plot(mc_a)
plot(mc)
#### _KO750 Taxa ####
# Get the same 44 samples from the KO750 comparison and make PCoA from fungal_CPM_nz
input_fungi_CPM_nz_44 <- filter_data(input_fungi_CPM_nz,
filter_cat = "taxon_oid",
keep_vals = ko_meta_filt$taxon_oid)
#### _KO750 Taxa ####
# Get the same 40 samples from the KO750 comparison and make PCoA from fungal_CPM_nz
input_fungi_CPM_nz_40 <- filter_data(input_fungi_CPM_nz,
filter_cat = "taxon_oid",
keep_vals = ko_meta_filt$taxon_oid)
rm(input_fungi_CPM_nz_44)
# BC
bc <- calc_dm(input_fungi_CPM_nz_40$data_loaded)
set.seed(1150)
adonis2(bc ~ Environment, data = input_fungi_CPM_nz_40$map_loaded) # R2 = 0.49, p = 0.001
anova(betadisper(bc, input_fungi_CPM_nz_40$map_loaded$Environment)) # Dispersion homogeneous
pcoa <- cmdscale(bc, k = nrow(input_fungi_CPM_nz_40$map_loaded) - 1, eig = T)
pcoaA1 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[2]*100, digits = 1)
input_fungi_CPM_nz_40$map_loaded$Axis01 <- scores(pcoa)[,1]
input_fungi_CPM_nz_40$map_loaded$Axis02 <- scores(pcoa)[,2]
micro.hulls <- ddply(input_fungi_CPM_nz_40$map_loaded, c("Environment"), find_hull)
bc44 <- ggplot(input_fungi_CPM_nz_40$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.75, shape = 16, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Bray-Curtis",
colour = "Environment") +
scale_fill_manual(values = color_mapping) +
scale_colour_manual(values = color_mapping) +
xlim(-0.48, 0.35) +
ylim(-0.31, 0.34) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "right",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
leg44 <- get_legend(bc44)
bc40 <- ggplot(input_fungi_CPM_nz_40$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.75, shape = 16, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Bray-Curtis",
colour = "Environment") +
scale_fill_manual(values = color_mapping) +
scale_colour_manual(values = color_mapping) +
xlim(-0.48, 0.35) +
ylim(-0.31, 0.34) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "right",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
leg40 <- get_legend(bc40)
bc40 <- bc40 + theme(legend.position = "none")
range(input_fungi_CPM_nz_40$map_loaded$Axis01) # -0.41 to 0.29
range(input_fungi_CPM_nz_40$map_loaded$Axis02) # -0.31 to 0.34
jac <- calc_dm(input_fungi_CPM_nz_40$data_loaded, method = "jaccard")
set.seed(1150)
adonis2(jac ~ Environment, data = input_fungi_CPM_nz_40$map_loaded) # R2 = 0.54, p = 0.001
anova(betadisper(jac, input_fungi_CPM_nz_40$map_loaded$Environment)) # Dispersion homogeneous
pcoa <- cmdscale(jac, k = nrow(input_fungi_CPM_nz_40$map_loaded) - 1, eig = T)
pcoaA1 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[2]*100, digits = 1)
input_fungi_CPM_nz_40$map_loaded$Axis01 <- scores(pcoa)[,1]
input_fungi_CPM_nz_40$map_loaded$Axis02 <- scores(pcoa)[,2]
jac40 <- ggplot(input_fungi_CPM_nz_40$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.75, shape = 16, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Jaccard") +
scale_fill_manual(values = color_mapping) +
scale_colour_manual(values = color_mapping) +
xlim(-0.48, 0.35) +
ylim(-0.31, 0.34) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
jac40
micro.hulls <- ddply(input_fungi_CPM_nz_40$map_loaded, c("Environment"), find_hull)
jac40 <- ggplot(input_fungi_CPM_nz_40$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.75, shape = 16, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Jaccard") +
scale_fill_manual(values = color_mapping) +
scale_colour_manual(values = color_mapping) +
xlim(-0.48, 0.35) +
ylim(-0.31, 0.34) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
jac40
jac40 <- ggplot(input_fungi_CPM_nz_40$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.75, shape = 16, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Jaccard") +
scale_fill_manual(values = color_mapping) +
scale_colour_manual(values = color_mapping) +
#xlim(-0.48, 0.35) +
#ylim(-0.31, 0.34) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
jac40
range(input_fungi_CPM_nz_40$map_loaded$Axis01) # -0.48 to 0.35
range(input_fungi_CPM_nz_40$map_loaded$Axis02) # -0.16 to 0.18
jac40 <- ggplot(input_fungi_CPM_nz_40$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.75, shape = 16, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Jaccard") +
scale_fill_manual(values = color_mapping) +
scale_colour_manual(values = color_mapping) +
xlim(-0.48, 0.35) +
ylim(-0.31, 0.34) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
jac40
jac40 <- ggplot(input_fungi_CPM_nz_40$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.75, shape = 16, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Jaccard") +
scale_fill_manual(values = color_mapping) +
scale_colour_manual(values = color_mapping) +
xlim(-0.48, 0.38) +
ylim(-0.31, 0.34) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
jac40
pcoa <- cmdscale(bc, k = nrow(input_fungi_CPM_nz_40$map_loaded) - 1, eig = T)
pcoaA1 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[2]*100, digits = 1)
input_fungi_CPM_nz_40$map_loaded$Axis01 <- scores(pcoa)[,1]
input_fungi_CPM_nz_40$map_loaded$Axis02 <- scores(pcoa)[,2]
micro.hulls <- ddply(input_fungi_CPM_nz_40$map_loaded, c("Environment"), find_hull)
bc40 <- ggplot(input_fungi_CPM_nz_40$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.75, shape = 16, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Bray-Curtis",
colour = "Environment") +
scale_fill_manual(values = color_mapping) +
scale_colour_manual(values = color_mapping) +
xlim(-0.48, 0.38) +
ylim(-0.31, 0.34) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "right",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
leg40 <- get_legend(bc40)
bc40 <- bc40 + theme(legend.position = "none")
bc40
plot_grid(bc44, jac44, leg44, ncol = 3, rel_widths = c(2.5,2.5,1.1),
labels = c("A", "B"))
plot_grid(bc40, jac40, leg40, ncol = 3, rel_widths = c(2.5,2.5,1.1),
labels = c("A", "B"))
#### ___Figure S6 ####
png("FinalFigs/FigureS6.png", width = 8.5, height = 5, units = "in", res = 300)
plot_grid(bc40, jac40, leg40, ncol = 3, rel_widths = c(2.5,2.5,1.1),
labels = c("A", "B"))
dev.off()
write_xlsx(input$map_loaded, "data/TableS1_noScaff.xlsx", format_headers = F)
write_xlsx(input$map_loaded, "data/TableS2_noScaff.xlsx", format_headers = F)
#### _Table S2 ####
# Add number of scaffolds
scaff_cryo <- read.delim("data/ScaffoldCount_cryo.txt") %>%
dplyr::select(taxon_oid, Scaffold.Count.....assembled)
scaff <- read.delim("data/ScaffoldCount.txt") %>%
dplyr::select(taxon_oid, Scaffold.Count.....assembled) %>%
rbind(., scaff_cryo)
ts1 <- read_excel("data/TableS1_noscaff.xlsx") %>%
left_join(., scaff, by = "taxon_oid") %>%
mutate(ScaffoldCount = Scaffold.Count.....assembled) %>%
dplyr::select(-Scaffold.Count.....assembled, -IMG.Genome.ID, -Day, -Month, -Year, -sampleID,
-GenomeSize, -Study.Name2, -Location2, -EnvGeo) %>%
arrange(Environment, Study.Name, Genome.Name...Sample.Name)
ts2 <- read_excel("data/TableS2_noscaff.xlsx") %>%
left_join(., scaff, by = "taxon_oid") %>%
mutate(ScaffoldCount = Scaffold.Count.....assembled) %>%
dplyr::select(-Scaffold.Count.....assembled, -IMG.Genome.ID, -Day, -Month, -Year, -sampleID,
-GenomeSize, -Study.Name2, -Location2, -EnvGeo) %>%
arrange(Environment, Study.Name, Genome.Name...Sample.Name)
ts2 <- read_excel("data/TableS2_noscaff.xlsx") %>%
left_join(., scaff, by = "taxon_oid") %>%
mutate(ScaffoldCount = Scaffold.Count.....assembled) %>%
dplyr::select(-Scaffold.Count.....assembled, -IMG.Genome.ID, -Day, -Month, -Year, -sampleID,
-GenomeSize, -Study.Name2, -Location2) %>%
arrange(Environment, Study.Name, Genome.Name...Sample.Name)
write_xlsx(ts2, "data/TableS2.xlsx", format_headers = F)
names(ts2)
ts2$ScaffoldCount
sum(is.na(ts2$ScaffoldCount))
check <- ts2 %>%
filter(is.na(ScaffoldCount) == T)
View(check)
top_phy[[1]]
#### ___Table S4 ####
# Combine
top_taxa <- rbind(top_phy[[1]], top_phy[[2]], top_phy[[3]],
top_phy[[4]], top_phy[[5]], top_phy[[6]],
top_phy[[7]], top_phy[[8]], top_phy[[9]],
top_cla[[1]], top_cla[[2]], top_cla[[3]],
top_cla[[4]], top_cla[[5]], top_cla[[6]],
top_cla[[7]], top_cla[[8]], top_cla[[9]],
top_ord[[1]], top_ord[[2]], top_ord[[3]],
top_ord[[4]], top_ord[[5]], top_ord[[6]],
top_ord[[7]], top_ord[[8]], top_ord[[9]],
top_fam[[1]], top_fam[[2]], top_fam[[3]],
top_fam[[4]], top_fam[[5]], top_fam[[6]],
top_fam[[7]], top_fam[[8]], top_fam[[9]],
top_gen[[1]], top_gen[[2]], top_gen[[3]],
top_gen[[4]], top_gen[[5]], top_gen[[6]],
top_gen[[7]], top_gen[[8]], top_gen[[9]]) %>%
filter(taxon != "Other") %>%
rename("Environment" = "group_by") %>%
rename("mean_CPM" = "mean_value") %>%
mutate(mean_CPM = round(mean_CPM, digits = 4))
View(top_taxa)
sum(duplicated(top_taxa$mean_CPM))
#### ___Table S4 ####
# Combine
top_taxa <- rbind(top_phy[[1]], top_phy[[2]], top_phy[[3]],
top_phy[[4]], top_phy[[5]], top_phy[[6]],
top_phy[[7]], top_phy[[8]], top_phy[[9]],
top_cla[[1]], top_cla[[2]], top_cla[[3]],
top_cla[[4]], top_cla[[5]], top_cla[[6]],
top_cla[[7]], top_cla[[8]], top_cla[[9]],
top_ord[[1]], top_ord[[2]], top_ord[[3]],
top_ord[[4]], top_ord[[5]], top_ord[[6]],
top_ord[[7]], top_ord[[8]], top_ord[[9]],
top_fam[[1]], top_fam[[2]], top_fam[[3]],
top_fam[[4]], top_fam[[5]], top_fam[[6]],
top_fam[[7]], top_fam[[8]], top_fam[[9]],
top_gen[[1]], top_gen[[2]], top_gen[[3]],
top_gen[[4]], top_gen[[5]], top_gen[[6]],
top_gen[[7]], top_gen[[8]], top_gen[[9]]) %>%
filter(taxon != "Other") %>%
rename("Environment" = "group_by") %>%
rename("mean_CPM" = "mean_value") %>%
mutate(mean_CPM = round(mean_CPM, digits = 5))
sum(duplicated(top_taxa$mean_CPM))
#### ___Table S4 ####
# Combine
top_taxa <- rbind(top_phy[[1]], top_phy[[2]], top_phy[[3]],
top_phy[[4]], top_phy[[5]], top_phy[[6]],
top_phy[[7]], top_phy[[8]], top_phy[[9]],
top_cla[[1]], top_cla[[2]], top_cla[[3]],
top_cla[[4]], top_cla[[5]], top_cla[[6]],
top_cla[[7]], top_cla[[8]], top_cla[[9]],
top_ord[[1]], top_ord[[2]], top_ord[[3]],
top_ord[[4]], top_ord[[5]], top_ord[[6]],
top_ord[[7]], top_ord[[8]], top_ord[[9]],
top_fam[[1]], top_fam[[2]], top_fam[[3]],
top_fam[[4]], top_fam[[5]], top_fam[[6]],
top_fam[[7]], top_fam[[8]], top_fam[[9]],
top_gen[[1]], top_gen[[2]], top_gen[[3]],
top_gen[[4]], top_gen[[5]], top_gen[[6]],
top_gen[[7]], top_gen[[8]], top_gen[[9]]) %>%
filter(taxon != "Other") %>%
rename("Environment" = "group_by") %>%
rename("mean_CPM" = "mean_value") %>%
mutate(mean_CPM = round(mean_CPM, digits = 10))
sum(duplicated(top_taxa$mean_CPM))
#### ___Table S4 ####
# Combine
top_taxa <- rbind(top_phy[[1]], top_phy[[2]], top_phy[[3]],
top_phy[[4]], top_phy[[5]], top_phy[[6]],
top_phy[[7]], top_phy[[8]], top_phy[[9]],
top_cla[[1]], top_cla[[2]], top_cla[[3]],
top_cla[[4]], top_cla[[5]], top_cla[[6]],
top_cla[[7]], top_cla[[8]], top_cla[[9]],
top_ord[[1]], top_ord[[2]], top_ord[[3]],
top_ord[[4]], top_ord[[5]], top_ord[[6]],
top_ord[[7]], top_ord[[8]], top_ord[[9]],
top_fam[[1]], top_fam[[2]], top_fam[[3]],
top_fam[[4]], top_fam[[5]], top_fam[[6]],
top_fam[[7]], top_fam[[8]], top_fam[[9]],
top_gen[[1]], top_gen[[2]], top_gen[[3]],
top_gen[[4]], top_gen[[5]], top_gen[[6]],
top_gen[[7]], top_gen[[8]], top_gen[[9]]) %>%
filter(taxon != "Other") %>%
rename("Environment" = "group_by") %>%
rename("mean_CPM" = "mean_value") %>%
mutate(mean_CPM = round(mean_CPM, digits = 5))
sum(duplicated(top_taxa$mean_CPM))
#### ___Table S4 ####
# Combine
top_taxa <- rbind(top_phy[[1]], top_phy[[2]], top_phy[[3]],
top_phy[[4]], top_phy[[5]], top_phy[[6]],
top_phy[[7]], top_phy[[8]], top_phy[[9]],
top_cla[[1]], top_cla[[2]], top_cla[[3]],
top_cla[[4]], top_cla[[5]], top_cla[[6]],
top_cla[[7]], top_cla[[8]], top_cla[[9]],
top_ord[[1]], top_ord[[2]], top_ord[[3]],
top_ord[[4]], top_ord[[5]], top_ord[[6]],
top_ord[[7]], top_ord[[8]], top_ord[[9]],
top_fam[[1]], top_fam[[2]], top_fam[[3]],
top_fam[[4]], top_fam[[5]], top_fam[[6]],
top_fam[[7]], top_fam[[8]], top_fam[[9]],
top_gen[[1]], top_gen[[2]], top_gen[[3]],
top_gen[[4]], top_gen[[5]], top_gen[[6]],
top_gen[[7]], top_gen[[8]], top_gen[[9]]) %>%
filter(taxon != "Other") %>%
rename("Environment" = "group_by") %>%
rename("mean_CPM" = "mean_value") %>%
mutate(mean_CPM = round(mean_CPM, digits = 4))
sum(duplicated(top_taxa$mean_CPM))
#### ___Table S4 ####
# Combine
top_taxa <- rbind(top_phy[[1]], top_phy[[2]], top_phy[[3]],
top_phy[[4]], top_phy[[5]], top_phy[[6]],
top_phy[[7]], top_phy[[8]], top_phy[[9]],
top_cla[[1]], top_cla[[2]], top_cla[[3]],
top_cla[[4]], top_cla[[5]], top_cla[[6]],
top_cla[[7]], top_cla[[8]], top_cla[[9]],
top_ord[[1]], top_ord[[2]], top_ord[[3]],
top_ord[[4]], top_ord[[5]], top_ord[[6]],
top_ord[[7]], top_ord[[8]], top_ord[[9]],
top_fam[[1]], top_fam[[2]], top_fam[[3]],
top_fam[[4]], top_fam[[5]], top_fam[[6]],
top_fam[[7]], top_fam[[8]], top_fam[[9]],
top_gen[[1]], top_gen[[2]], top_gen[[3]],
top_gen[[4]], top_gen[[5]], top_gen[[6]],
top_gen[[7]], top_gen[[8]], top_gen[[9]]) %>%
filter(taxon != "Other") %>%
rename("Environment" = "group_by") %>%
rename("mean_CPM" = "mean_value") %>%
mutate(mean_CPM = round(mean_CPM, digits = 5))
sum(duplicated(top_taxa$mean_CPM))
write_xlsx(top_taxa, "data/top_taxa_by_env_final.xlsx", format_headers = F)
write_xlsx(top_taxa, "data/TableS5.xlsx", format_headers = F)
View(renamed)
View(input_fungi_CPM_nz$taxonomy_loaded)
min(input$map_loaded$Fungi)
max(input$map_loaded$Fungi)
mean(input$map_loaded$Fungi)
se(input$map_loaded$Fungi)
max(input_fungi$map_loaded$rich)
View(renames)
View(renamed)
ggplot(input$map_loaded, aes(GenomeSize, count)) +
geom_point(size = 1.5, alpha = 0.25) +
geom_smooth(method = "lm") +
labs(x = "Assembled genome size",
y = "Assigned genus genes") +
theme_bw() +
theme(axis.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 10))
summary(lm(input$map_loaded$count ~ input$map_loaded$GenomeSize)) # R2 = 0.86
summary(lm(input_fungi$map_loaded$fung_count ~ input_fungi$map_loaded$GenomeSize))
version
View(prev)
prev
env_prev
mean(input$map_loaded$Fungi)
se(input$map_loaded$Fungi) # 0.
min(input$map_loaded$GenomeSize)
max(input$map_loaded$GenomeSize)
mean(
# Note lots of samples with 0 or very few fungi
# Purposefully not filtering those out those as 0's are interesting in this analysis
# These are extreme environments, some may have few to no fungi
# Further below, however, some analyses will be done with zeroes removed
mean(colSums(input_fungi$data_loaded)) # 555.6409
se(colSums(input_fungi$data_loaded)) # 63.5079
unique(input_fungi$taxonomy_loaded$taxonomy6) # 293 unique genera
max(input_fungi$map_loaded$shannon) # 5.186401
# Do at each taxonomic level
# Genus (lowest level) - summarize taxa, don't use input$data_loaded
bc <- calc_dm(Genus_nz)
anova(betadisper(bc, input_fungi_CPM_nz$map_loaded$Environment)) # Dispersion not homogeneous
combined %>%
group_by(taxon, comparison) %>%
summarise(mean = mean(value),
se = se(value))
View(ts_p)
ts_p <- taxa_summary_by_sample_type(tax_sum_Phyla,
input_fungi_CPM$map_loaded,
'Environment',
0.0001,
'KW') %>%
rownames_to_column(var = "Phylum") %>%
dplyr::select(Phylum, everything())
View(ts_p)
write_xlsx(ts_p, "data/TableS3.xlsx", format_headers = F)
ts_c <- taxa_summary_by_sample_type(tax_sum_Class,
input_fungi_CPM$map_loaded,
'Environment',
0.0001,
'KW') %>%
rownames_to_column(var = "Class") %>%
dplyr::select(Phylum, everything())
ts_c <- taxa_summary_by_sample_type(tax_sum_Class,
input_fungi_CPM$map_loaded,
'Environment',
0.0001,
'KW') %>%
rownames_to_column(var = "Class") %>%
dplyr::select(Class, everything())
View(ts_c)
write_xlsx(ts_c, "data/TableS4.xlsx", format_headers = F)
unique(ko_table_wTax$KO)
length(unique(ko_table_wTax$KO))
range(ko_meta$richness_KO) # 1 to 2441
range(ko_meta$shannon_KO) # 0 to 7.5
mean(ko_meta$richness_KO)
se(ko_meta$richness_KO)
summary(lm(richness_KO ~ poly(fung_count, 2, raw = TRUE), data = ko_meta))
#### __Stats ####
# Rerun whichever richness filter you want, then run this
# 750
nrow(ko_comm_DESeq_filt)
bc_ko <- vegdist(ko_comm_DESeq_filt, method = "bray")
jac_ko <- vegdist(ko_comm_DESeq_filt, method = "jaccard")
set.seed(308)
adonis2(bc_ko ~ Environment, data = ko_meta_filt) # R2 = 0.34, p = 0.001
anova(betadisper(bc_ko, ko_meta_filt$Environment)) # Dispersion not homogeneous
set.seed(308)
adonis2(jac_ko ~ ko_meta_filt$Environment) # R2 = 0.31, p = 0.001
anova(betadisper(jac_ko, ko_meta_filt$Environment)) # Dispersion not homogeneous
View(renamed)
table(input_fungi$map_loaded$Environment)
bc_arc <- calc_dm(Genus_nz_arc)
set.seed(1150)
adonis2(bc_arc ~ Environment, data = input_arc_CPM_nz$map_loaded) # R2 = 0.22, p = 0.001
bc_bac <- calc_dm(Genus_nz_bac)
set.seed(1150)
adonis2(bc_bac ~ Environment, data = input_bac_CPM$map_loaded) # R2 = 0.21, p = 0.001
nrow(input_arc$data_loaded) # 187
length(unique(input_arc$taxonomy_loaded$taxonomy6))
View(Genus_nz_arc)
View(Genus_nz_bac)
nrow(input_bac$data_loaded) # 5317 (minus 2 (unclassified, unknown) = 5315 known)
length(unique(input_bac$taxonomy_loaded$taxonomy6))
View(Genus_nz_bac)
View(Genus_nz_bac)
View(Genus_nz_arc)
View(countArc)
nrow(input_arc_CPM_nz$map_loaded)
jac <- calc_dm(input_fungi_CPM_nz_40$data_loaded, method = "jaccard")
set.seed(1150)
adonis2(jac ~ Environment, data = input_fungi_CPM_nz_40$map_loaded) # R2 = 0.59, p = 0.001
# BC
bc <- calc_dm(input_fungi_CPM_nz_40$data_loaded)
set.seed(1150)
adonis2(bc ~ Environment, data = input_fungi_CPM_nz_40$map_loaded) # R2 = 0.53, p = 0.001
hist(input_fungi$map_loaded$rich)
