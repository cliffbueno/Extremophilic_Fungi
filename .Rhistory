coord_polar("y", start=0) +
scale_fill_manual(values = p_colors[[i]]) +
theme_void() +
ggtitle(t) +
theme(legend.position = "none",
plot.title = element_text(size = 5, hjust = 0.5),
plot.margin = margin(0, -50, -50, -50, "pt"))
}
p[[1]]
# 4, 4, 4, 4, 4, 4, 4, 4, 2
pies <- plot_grid(p[[1]], p[[2]], p[[3]], p[[4]],
p[[5]], p[[6]], p[[7]], p[[8]],
p[[9]], p[[10]], p[[11]], p[[12]],
p[[13]], p[[14]], p[[15]], p[[16]],
p[[17]], p[[18]], p[[19]], p[[20]],
p[[21]], p[[22]], p[[23]], p[[24]],
p[[25]], p[[26]], p[[27]], p[[28]],
p[[29]], p[[30]], p[[31]], p[[32]],
p[[33]], p[[34]], NULL, NULL,
ncol = 4)
pies
# 4, 4, 4, 4, 4, 4, 4, 4, 2
pies <- plot_grid(p[[1]], p[[2]], p[[3]], p[[4]],
p[[5]], p[[6]], p[[7]], p[[8]],
p[[9]], p[[10]], p[[11]], p[[12]],
p[[13]], p[[14]], p[[15]], p[[16]],
p[[17]], p[[18]], p[[19]], p[[20]],
p[[21]], p[[22]], p[[23]], p[[24]],
p[[25]], p[[26]], p[[27]], p[[28]],
p[[29]], p[[30]], p[[31]], p[[32]],
p[[33]], p[[34]], NULL, NULL,
ncol = 4,
align = "v")
pies
# 4, 4, 4, 4, 4, 4, 4, 4, 2
pies <- plot_grid(p[[1]], p[[2]], p[[3]], p[[4]],
p[[5]], p[[6]], p[[7]], p[[8]],
p[[9]], p[[10]], p[[11]], p[[12]],
p[[13]], p[[14]], p[[15]], p[[16]],
p[[17]], p[[18]], p[[19]], p[[20]],
p[[21]], p[[22]], p[[23]], p[[24]],
p[[25]], p[[26]], p[[27]], p[[28]],
p[[29]], p[[30]], p[[31]], p[[32]],
p[[33]], p[[34]], NULL, NULL,
ncol = 4,
align = "h")
pies
plot(1,2)
# 4, 4, 4, 4, 4, 4, 4, 4, 2
pies <- plot_grid(p[[1]], p[[2]], p[[3]], p[[4]],
p[[5]], p[[6]], p[[7]], p[[8]],
p[[9]], p[[10]], p[[11]], p[[12]],
p[[13]], p[[14]], p[[15]], p[[16]],
p[[17]], p[[18]], p[[19]], p[[20]],
p[[21]], p[[22]], p[[23]], p[[24]],
p[[25]], p[[26]], p[[27]], p[[28]],
p[[29]], p[[30]], p[[31]], p[[32]],
p[[33]], p[[34]], NULL, NULL,
ncol = 4)
pies
# Remake
pies <- plot_grid(l1, p[[1]], p[[2]], p[[3]], p[[4]],
l2, p[[5]], p[[6]], p[[7]], p[[8]],
l3, p[[9]], p[[10]], p[[11]], p[[12]],
l4, p[[13]], p[[14]], p[[15]], p[[16]],
l5, p[[17]], p[[18]], p[[19]], p[[20]],
l6, p[[21]], p[[22]], p[[23]], p[[24]],
l7, p[[25]], p[[26]], p[[27]], p[[28]],
l8, p[[29]], p[[30]], p[[31]], p[[32]],
l9, p[[33]], p[[34]], NULL, NULL, NULL,
ncol = 5,
rel_widths = c(0.04, 0.24, 0.24, 0.24, 0.24))
pies
plot_grid(pies, pie_leg, rel_widths = c(4, 1))
p[[1]]
# Manually update some long ones if needed
df[[1]]$map_loaded$Location <- "USA: Iron Mountain, CA"
df[[1]]$map_loaded$Location <- "USA: Iron Mountain, CA"
df[[4]]$map_loaded$Location <- "USA: Akron, OH"
df[[12]]$map_loaded$Location <- "Antarctica: Canada Glacier"
df[[14]]$map_loaded$Location <- "USA: Jornada LTER, NM"
df[[16]]$map_loaded$Location <- "USA: Green Butte, UT"
df[[17]]$map_loaded$Location <- "Russell Glacier, Greenland"
df[[18]]$map_loaded$Location <- "Midre Lovenbreen, Norway"
df[[19]]$map_loaded$Location <- "Storglaciaren, Sweden"
df[[20]]$map_loaded$Location <- "Rabots glacier, Sweden"
df[[28]]$map_loaded$Location <- "Anemone Vent, Axial Seamount"
df[[29]]$map_loaded$Location <- "Garden Lake, Australia\n(n = 117)"
df[[30]]$map_loaded$Location <- "Eisfeld solar saltern, Namibia\n(n = 7)"
#### __Phyla ####
# N.B. summarize taxonomy does not work properly with 1 sample
# For those need to transpose the dataframe
for (i in 1:nrow(studies)) {
phy[[i]] <- summarize_taxonomy(df[[i]], level = 2, report_higher_tax = F, relative = T)
}
for (i in 1:nrow(studies)) {
if (nrow(phy[[i]]) == 1) {
phy[[i]] <- as.data.frame(t(phy[[i]]))
colnames(phy[[i]]) <- rownames(df[[i]]$map_loaded)
}
}
# Colors
phyla_present <- as.data.frame(table(input_fungi_nz$taxonomy_loaded$taxonomy2)) %>%
mutate(Var1 = as.character(Var1))
for (i in 1:length(df)) {
p_colors[[i]] <- brewer.pal(7, "Paired")
p_colors[[i]] <- subset(p_colors[[i]],
phyla_present$Var1 %in% df[[i]]$taxonomy_loaded$taxonomy2)
}
# Pies
# Need to do it differently for n > 1 and n = 1
for (i in 1:nrow(studies)) {
t <- df[[i]]$map_loaded$Location
p[[i]] <- plot_taxa_bars(phy[[i]], df[[i]]$map_loaded, "Study.Name2", 20) +
coord_polar("y", start=0) +
scale_fill_manual(values = p_colors[[i]]) +
theme_void() +
ggtitle(t) +
theme(legend.position = "none",
plot.title = element_text(size = 5, hjust = 0.5, vjust = -5),
plot.margin = margin(0, -50, -25, -50, "pt"))
}
# Remake
pies <- plot_grid(l1, p[[1]], p[[2]], p[[3]], p[[4]],
l2, p[[5]], p[[6]], p[[7]], p[[8]],
l3, p[[9]], p[[10]], p[[11]], p[[12]],
l4, p[[13]], p[[14]], p[[15]], p[[16]],
l5, p[[17]], p[[18]], p[[19]], p[[20]],
l6, p[[21]], p[[22]], p[[23]], p[[24]],
l7, p[[25]], p[[26]], p[[27]], p[[28]],
l8, p[[29]], p[[30]], p[[31]], p[[32]],
l9, p[[33]], p[[34]], NULL, NULL, NULL,
ncol = 5,
rel_widths = c(0.04, 0.24, 0.24, 0.24, 0.24))
plot_grid(pies, pie_leg, rel_widths = c(4, 1))
p[[1]]
# Remake
pies <- plot_grid(l1, p[[1]], p[[2]], p[[3]], p[[4]],
l2, p[[5]], p[[6]], p[[7]], p[[8]],
l3, p[[9]], p[[10]], p[[11]], p[[12]],
l4, p[[13]], p[[14]], p[[15]], p[[16]],
l5, p[[17]], p[[18]], p[[19]], p[[20]],
l6, p[[21]], p[[22]], p[[23]], p[[24]],
l7, p[[25]], p[[26]], p[[27]], p[[28]],
l8, p[[29]], p[[30]], p[[31]], p[[32]],
l9, p[[33]], p[[34]], NULL, NULL, NULL,
ncol = 5,
rel_widths = c(0.04, 0.24, 0.24, 0.24, 0.24))
plot_grid(pies, pie_leg, rel_widths = c(4, 1))
l9
p[[i]] <- plot_taxa_bars(phy[[i]], df[[i]]$map_loaded, "Study.Name2", 20) +
coord_polar("y", start=0) +
scale_fill_manual(values = p_colors[[i]]) +
theme_void() +
ggtitle(t) +
theme(legend.position = "none",
plot.title = element_text(size = 5, hjust = 0.5, vjust = -5),
plot.margin = margin(0, -50, -15, -50, "pt"))
# Pies
# Need to do it differently for n > 1 and n = 1
for (i in 1:nrow(studies)) {
t <- df[[i]]$map_loaded$Location
p[[i]] <- plot_taxa_bars(phy[[i]], df[[i]]$map_loaded, "Study.Name2", 20) +
coord_polar("y", start=0) +
scale_fill_manual(values = p_colors[[i]]) +
theme_void() +
ggtitle(t) +
theme(legend.position = "none",
plot.title = element_text(size = 5, hjust = 0.5, vjust = -5),
plot.margin = margin(0, -50, -15, -50, "pt"))
}
# Remake
pies <- plot_grid(l1, p[[1]], p[[2]], p[[3]], p[[4]],
l2, p[[5]], p[[6]], p[[7]], p[[8]],
l3, p[[9]], p[[10]], p[[11]], p[[12]],
l4, p[[13]], p[[14]], p[[15]], p[[16]],
l5, p[[17]], p[[18]], p[[19]], p[[20]],
l6, p[[21]], p[[22]], p[[23]], p[[24]],
l7, p[[25]], p[[26]], p[[27]], p[[28]],
l8, p[[29]], p[[30]], p[[31]], p[[32]],
l9, p[[33]], p[[34]], NULL, NULL, NULL,
ncol = 5,
rel_widths = c(0.04, 0.24, 0.24, 0.24, 0.24))
plot_grid(pies, pie_leg, rel_widths = c(4, 1))
# Add legend
pdf("FigsUpdated2/Pies_Phyla.pdf", width = 7, height = 9)
plot_grid(pies, pie_leg, rel_widths = c(4, 1))
dev.off()
# Add legend
pdf("FigsUpdated2/Pies_Phyla.pdf", width = 8, height = 10)
plot_grid(pies, pie_leg, rel_widths = c(4, 1))
dev.off()
#### __Class ####
cla <- list()
c_colors <- list()
c <- list()
# Classes
for (i in 1:nrow(studies)) {
cla[[i]] <- summarize_taxonomy(df[[i]], level = 3, report_higher_tax = F, relative = T)
}
for (i in 1:nrow(studies)) {
if (nrow(cla[[i]]) == 1) {
cla[[i]] <- as.data.frame(t(cla[[i]]))
colnames(cla[[i]]) <- rownames(cla[[i]]$map_loaded)
}
}
# Colors
classes_present <- as.data.frame(table(input_fungi_nz$taxonomy_loaded$taxonomy3)) %>%
mutate(Var1 = as.character(Var1))
for (i in 1:length(df)) {
c_colors[[i]] <- colorRampPalette(brewer.pal(12, "Paired"))(nrow(classes_present))
c_colors[[i]] <- subset(c_colors[[i]],
classes_present$Var1 %in% df[[i]]$taxonomy_loaded$taxonomy3)
}
# Pies
for (i in 1:nrow(studies)) {
t <- df[[i]]$map_loaded$Location
c[[i]] <- plot_taxa_bars(cla[[i]], df[[i]]$map_loaded, "Study.Name2", 37) +
# geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start=0) +
scale_fill_manual(values = c_colors[[i]]) +
theme_void() +
ggtitle(t) +
theme(legend.position = "none",
plot.title = element_text(size = 5, hjust = 0.5, vjust = -5),
plot.margin = margin(0, -50, -15, -50, "pt"))
}
# Get legend - use one with all 37 classes
t <- df[[9]]$map_loaded$Location
c_forleg <- plot_taxa_bars(cla[[9]], df[[9]]$map_loaded, "Study.Name2", 37) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start=0) +
scale_fill_manual(values = c_colors[[9]]) +
labs(fill = "Classes") +
theme_void() +
ggtitle(t) +
guides(fill = guide_legend(ncol = 1)) +
theme(legend.position = "right",
legend.key.size = unit(0.25, "cm"),
plot.title = element_text(size = 10, hjust = 0.5, vjust = -15),
plot.margin = margin(0,0,0,0, "pt"))
c_forleg
pie_leg_c <- get_legend(c_forleg)
# Make huge multipanel
pies_c <- plot_grid(l1, c[[1]], c[[2]], c[[3]], c[[4]],
l2, c[[5]], c[[6]], c[[7]], c[[8]],
l3, c[[9]], c[[10]], c[[11]], c[[12]],
l4, c[[13]], c[[14]], c[[15]], c[[16]],
l5, c[[17]], c[[18]], c[[19]], c[[20]],
l6, c[[21]], c[[22]], c[[23]], c[[24]],
l7, c[[25]], c[[26]], c[[27]], c[[28]],
l8, c[[29]], c[[30]], c[[31]], c[[32]],
l9, c[[33]], c[[34]], NULL, NULL, NULL,
ncol = 5,
rel_widths = c(0.04, 0.24, 0.24, 0.24, 0.24))
plot_grid(pies_c, pie_leg_c, rel_widths = c(4, 1))
pie_leg_c
pie_leg_c
c_forleg <- plot_taxa_bars(cla[[9]], df[[9]]$map_loaded, "Study.Name2", 37) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start=0) +
scale_fill_manual(values = c_colors[[9]]) +
labs(fill = "Classes") +
theme_void() +
ggtitle(t) +
guides(fill = guide_legend(ncol = 1)) +
theme(legend.position = "right",
legend.key.size = unit(0.3, "cm"),
plot.title = element_text(size = 10, hjust = 0.5, vjust = -15),
plot.margin = margin(0,0,0,0, "pt"))
pie_leg_c <- get_legend(c_forleg)
plot_grid(pies_c, pie_leg_c, rel_widths = c(4, 1))
c_forleg
c_forleg <- plot_taxa_bars(cla[[9]], df[[9]]$map_loaded, "Study.Name2", 37) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start=0) +
scale_fill_manual(values = c_colors[[9]]) +
labs(fill = "Classes") +
theme_void() +
ggtitle(t) +
guides(fill = guide_legend(ncol = 1)) +
theme(legend.position = "right",
legend.key.size = unit(0.4, "cm"),
plot.title = element_text(size = 10, hjust = 0.5, vjust = -15),
plot.margin = margin(0,0,0,0, "pt"))
c_forleg
c_forleg <- plot_taxa_bars(cla[[9]], df[[9]]$map_loaded, "Study.Name2", 37) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start=0) +
scale_fill_manual(values = c_colors[[9]]) +
labs(fill = "Classes") +
theme_void() +
ggtitle(t) +
guides(fill = guide_legend(ncol = 1)) +
theme(legend.position = "right",
legend.key.size = unit(0.4, "cm"),
legend.text = element_text(size = 8),
plot.title = element_text(size = 10, hjust = 0.5, vjust = -15),
plot.margin = margin(0,0,0,0, "pt"))
c_forleg
c_forleg <- plot_taxa_bars(cla[[9]], df[[9]]$map_loaded, "Study.Name2", 37) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start=0) +
scale_fill_manual(values = c_colors[[9]]) +
labs(fill = "Classes") +
theme_void() +
ggtitle(t) +
guides(fill = guide_legend(ncol = 1)) +
theme(legend.position = "right",
legend.key.size = unit(0.4, "cm"),
legend.text = element_text(size = 10),
plot.title = element_text(size = 10, hjust = 0.5, vjust = -15),
plot.margin = margin(0,0,0,0, "pt"))
c_forleg
c_forleg <- plot_taxa_bars(cla[[9]], df[[9]]$map_loaded, "Study.Name2", 37) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start=0) +
scale_fill_manual(values = c_colors[[9]]) +
labs(fill = "Classes") +
theme_void() +
ggtitle(t) +
guides(fill = guide_legend(ncol = 1)) +
theme(legend.position = "right",
legend.key.size = unit(0.5, "cm"),
legend.text = element_text(size = 10),
plot.title = element_text(size = 10, hjust = 0.5, vjust = -15),
plot.margin = margin(0,0,0,0, "pt"))
c_forleg
plot_grid(pies_c, pie_leg_c, rel_widths = c(4, 1))
pie_leg_c <- get_legend(c_forleg)
plot_grid(pies_c, pie_leg_c, rel_widths = c(4, 1))
# Add legend
pdf("FigsUpdated2/Pies_Classes.pdf", width = 8, height = 10)
plot_grid(pies_c, pie_leg_c, rel_widths = c(4, 1))
dev.off()
# Add legend
pdf("FigsUpdated2/Pies_Classes.pdf", width = 8, height = 10)
plot_grid(pies_c, pie_leg_c, rel_widths = c(3.9, 1.1))
dev.off()
# Add legend
pdf("FigsUpdated2/Pies_Classes.pdf", width = 8, height = 10)
plot_grid(pies_c, pie_leg_c, rel_widths = c(3.85, 1.15))
dev.off()
# Figure 4
png("FinalFigs/Figure4.png", width = 8, height = 10, units = "in", res = 300)
plot_grid(pies_c, pie_leg_c, rel_widths = c(3.85, 1.15))
dev.off()
c_forleg
# Manually update some long ones if needed
df[[1]]$map_loaded$Location <- "USA: Iron Mountain, CA\n(n = 17)"
df[[4]]$map_loaded$Location <- "USA: Akron, OH\n(n = 1)"
df[[12]]$map_loaded$Location <- "Antarctica: Canada Glacier\n(n = 3)"
df[[14]]$map_loaded$Location <- "USA: Jornada LTER, NM\n(n = 18)"
df[[16]]$map_loaded$Location <- "USA: Green Butte, UT\n(n = 7)"
df[[17]]$map_loaded$Location <- "Russell Glacier, Greenland\n(n = 24)"
df[[18]]$map_loaded$Location <- "Midre Lovenbreen, Norway\n(n = 12)"
df[[19]]$map_loaded$Location <- "Storglaciaren, Sweden\n(n = 8)"
df[[20]]$map_loaded$Location <- "Rabots glacier, Sweden\n(n = 4)"
df[[28]]$map_loaded$Location <- "Anemone Vent, Axial Seamount\n(n = 12)"
df[[29]]$map_loaded$Location <- "Garden Lake, Australia\n(n = 117)"
df[[30]]$map_loaded$Location <- "Eisfeld solar saltern, Namibia\n(n = 7)"
#### __Phyla ####
# N.B. summarize taxonomy does not work properly with 1 sample
# For those need to transpose the dataframe
for (i in 1:nrow(studies)) {
phy[[i]] <- summarize_taxonomy(df[[i]], level = 2, report_higher_tax = F, relative = T)
}
for (i in 1:nrow(studies)) {
if (nrow(phy[[i]]) == 1) {
phy[[i]] <- as.data.frame(t(phy[[i]]))
colnames(phy[[i]]) <- rownames(df[[i]]$map_loaded)
}
}
# Colors
phyla_present <- as.data.frame(table(input_fungi_nz$taxonomy_loaded$taxonomy2)) %>%
mutate(Var1 = as.character(Var1))
for (i in 1:length(df)) {
p_colors[[i]] <- brewer.pal(7, "Paired")
p_colors[[i]] <- subset(p_colors[[i]],
phyla_present$Var1 %in% df[[i]]$taxonomy_loaded$taxonomy2)
}
# Pies
# Need to do it differently for n > 1 and n = 1
for (i in 1:nrow(studies)) {
t <- df[[i]]$map_loaded$Location
p[[i]] <- plot_taxa_bars(phy[[i]], df[[i]]$map_loaded, "Study.Name2", 20) +
coord_polar("y", start=0) +
scale_fill_manual(values = p_colors[[i]]) +
theme_void() +
ggtitle(t) +
theme(legend.position = "none",
plot.title = element_text(size = 5, hjust = 0.5, vjust = -5),
plot.margin = margin(0, -50, -15, -50, "pt"))
}
# Get legend - use one with all 7 phyla
t <- df[[4]]$map_loaded$Location
p_forleg <- plot_taxa_bars(phy[[4]], df[[4]]$map_loaded, "Study.Name2", 20) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start=0) +
scale_fill_manual(values = p_colors[[4]]) +
labs(fill = "Phylum") +
theme_void() +
ggtitle(t) +
theme(legend.position = "right",
# legend.key.size = unit(0.25, "cm"),
plot.title = element_text(size = 10, hjust = 0.5, vjust = -15),
plot.margin = margin(0,0,0,0, "pt"))
p_forleg
pie_leg <- get_legend(p_forleg)
# Make huge multipanel
table(loc_n$Environment)
# 4, 4, 4, 4, 4, 4, 4, 4, 2
pies <- plot_grid(p[[1]], p[[2]], p[[3]], p[[4]],
p[[5]], p[[6]], p[[7]], p[[8]],
p[[9]], p[[10]], p[[11]], p[[12]],
p[[13]], p[[14]], p[[15]], p[[16]],
p[[17]], p[[18]], p[[19]], p[[20]],
p[[21]], p[[22]], p[[23]], p[[24]],
p[[25]], p[[26]], p[[27]], p[[28]],
p[[29]], p[[30]], p[[31]], p[[32]],
p[[33]], p[[34]], NULL, NULL,
ncol = 4)
pies
pies
# Remake
pies <- plot_grid(l1, p[[1]], p[[2]], p[[3]], p[[4]],
l2, p[[5]], p[[6]], p[[7]], p[[8]],
l3, p[[9]], p[[10]], p[[11]], p[[12]],
l4, p[[13]], p[[14]], p[[15]], p[[16]],
l5, p[[17]], p[[18]], p[[19]], p[[20]],
l6, p[[21]], p[[22]], p[[23]], p[[24]],
l7, p[[25]], p[[26]], p[[27]], p[[28]],
l8, p[[29]], p[[30]], p[[31]], p[[32]],
l9, p[[33]], p[[34]], NULL, NULL, NULL,
ncol = 5,
rel_widths = c(0.04, 0.24, 0.24, 0.24, 0.24))
# Add legend
pdf("FigsUpdated2/Pies_Phyla.pdf", width = 8, height = 10)
plot_grid(pies, pie_leg, rel_widths = c(4, 1))
dev.off()
#### __Class ####
cla <- list()
c_colors <- list()
c <- list()
# Classes
for (i in 1:nrow(studies)) {
cla[[i]] <- summarize_taxonomy(df[[i]], level = 3, report_higher_tax = F, relative = T)
}
for (i in 1:nrow(studies)) {
if (nrow(cla[[i]]) == 1) {
cla[[i]] <- as.data.frame(t(cla[[i]]))
colnames(cla[[i]]) <- rownames(cla[[i]]$map_loaded)
}
}
# Colors
classes_present <- as.data.frame(table(input_fungi_nz$taxonomy_loaded$taxonomy3)) %>%
mutate(Var1 = as.character(Var1))
for (i in 1:length(df)) {
c_colors[[i]] <- colorRampPalette(brewer.pal(12, "Paired"))(nrow(classes_present))
c_colors[[i]] <- subset(c_colors[[i]],
classes_present$Var1 %in% df[[i]]$taxonomy_loaded$taxonomy3)
}
# Pies
for (i in 1:nrow(studies)) {
t <- df[[i]]$map_loaded$Location
c[[i]] <- plot_taxa_bars(cla[[i]], df[[i]]$map_loaded, "Study.Name2", 37) +
# geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start=0) +
scale_fill_manual(values = c_colors[[i]]) +
theme_void() +
ggtitle(t) +
theme(legend.position = "none",
plot.title = element_text(size = 5, hjust = 0.5, vjust = -5),
plot.margin = margin(0, -50, -15, -50, "pt"))
}
# Get legend - use one with all 37 classes
t <- df[[9]]$map_loaded$Location
c_forleg <- plot_taxa_bars(cla[[9]], df[[9]]$map_loaded, "Study.Name2", 37) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start=0) +
scale_fill_manual(values = c_colors[[9]]) +
labs(fill = "Classes") +
theme_void() +
ggtitle(t) +
guides(fill = guide_legend(ncol = 1)) +
theme(legend.position = "right",
legend.key.size = unit(0.5, "cm"),
legend.text = element_text(size = 10),
plot.title = element_text(size = 10, hjust = 0.5, vjust = -15),
plot.margin = margin(0,0,0,0, "pt"))
c_forleg
pie_leg_c <- get_legend(c_forleg)
# Make huge multipanel
pies_c <- plot_grid(l1, c[[1]], c[[2]], c[[3]], c[[4]],
l2, c[[5]], c[[6]], c[[7]], c[[8]],
l3, c[[9]], c[[10]], c[[11]], c[[12]],
l4, c[[13]], c[[14]], c[[15]], c[[16]],
l5, c[[17]], c[[18]], c[[19]], c[[20]],
l6, c[[21]], c[[22]], c[[23]], c[[24]],
l7, c[[25]], c[[26]], c[[27]], c[[28]],
l8, c[[29]], c[[30]], c[[31]], c[[32]],
l9, c[[33]], c[[34]], NULL, NULL, NULL,
ncol = 5,
rel_widths = c(0.04, 0.24, 0.24, 0.24, 0.24))
# Add legend
pdf("FigsUpdated2/Pies_Classes.pdf", width = 8, height = 10)
plot_grid(pies_c, pie_leg_c, rel_widths = c(3.85, 1.15))
dev.off()
# Figure 4
png("FinalFigs/Figure4.png", width = 8, height = 10, units = "in", res = 300)
plot_grid(pies_c, pie_leg_c, rel_widths = c(3.85, 1.15))
dev.off()
