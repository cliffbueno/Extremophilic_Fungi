pivot_longer(c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"),
names_to = "Gene", values_to = "Abundance") %>%
mutate(Gene = factor(Gene,
levels = c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811")))
gene_plot_summary <- gene_plot_long %>%
group_by(Environment, Gene) %>%
summarise(mean = mean(Abundance),
se = std.error(Abundance))
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)") +
scale_fill_brewer(palette = "Paired") +
theme_bw() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1))
# Add definitions to list (takes several hours, do once and write file)
#for (i in 1:nrow(ko_list)) {
#  def <- keggFind(database = "ko", query = ko_list$KO[i])
#  if (length(def) != 0) {
#    ko_list$Definition[i] <- def
#  }
#}
#write.csv(ko_list, file = "KOlist_wDefinitions.csv", row.names = F)
ko_list$KO_def <- paste(ko_list$KO, ko_list$Definition, sep = " ")
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)") +
scale_fill_manual(values = brewer.pal(10, "Paired"),
labels = ko_list$KO_def[1:10]) +
theme_bw() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1))
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)",
fill = "KO") +
scale_fill_manual(values = brewer.pal(10, "Paired"),
labels = ko_list$KO_def[1:10]) +
theme_bw() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1),
legend.text = element_text(size = 8))
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)",
fill = "KO") +
scale_fill_manual(values = brewer.pal(10, "Paired"),
labels = ko_list$KO_def[1:10]) +
theme_bw() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1),
legend.text = element_text(size = 8),
legend.key.size = unit(0.25, "cm"))
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)",
fill = "KO") +
scale_fill_manual(values = brewer.pal(10, "Paired"),
labels = ko_list$KO_def[1:10]) +
theme_bw() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1),
legend.text = element_text(size = 8),
legend.key.size = unit(0.3, "cm"))
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)",
fill = "KO") +
scale_fill_manual(values = brewer.pal(10, "Paired"),
labels = ko_list$KO_def[1:10]) +
theme_bw() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1),
legend.text = element_text(size = 8),
legend.key.size = unit(0.5, "cm"))
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)",
fill = "KO") +
scale_fill_manual(values = brewer.pal(10, "Paired"),
labels = ko_list$KO_def[1:10]) +
theme_classic() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1),
legend.text = element_text(size = 8),
legend.key.size = unit(0.5, "cm"),
legend.position = c(1,0),
legend.justification = c(1,0),
legend.background = element_blank())
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)",
fill = "KO") +
scale_fill_manual(values = brewer.pal(10, "Paired"),
labels = ko_list$KO_def[1:10]) +
theme_classic() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1),
legend.text = element_text(size = 8),
legend.key.size = unit(0.5, "cm"),
legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank())
#### __ (II) Graphs ####
# Barplot
table(ko_meta$Environment)
gene_plot_long <- gene_plot %>%
pivot_longer(c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"),
names_to = "Gene", values_to = "Abundance") %>%
mutate(Gene = factor(Gene,
levels = c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"))) %>%
mutate(Environment = recode_factor(Environment,
"Acid mine drainage" = "Acid mine drainage (n = 33)",
"Cryosphere" = "Cryosphere (n = 47)",
"Desert" = "Desert (n = 33)",
"Glacial forefield" = "Glacial forefield (n = 60)",
"Hot spring (n = 167)",
"Hydrothermal vent" = "Hydrothermal vent (n = 237)",
"Hypersaline" = "Hypersaline (n = 225)",
"Soda lake" = "Soda lake (n = 25)"))
rlang::last_error()
gene_plot_long <- gene_plot %>%
pivot_longer(c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"),
names_to = "Gene", values_to = "Abundance") %>%
mutate(Gene = factor(Gene,
levels = c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"))) %>%
mutate(Environment = as.factor(Environment)) %>%
mutate(Environment = recode_factor(Environment,
"Acid mine drainage" = "Acid mine drainage (n = 33)",
"Cryosphere" = "Cryosphere (n = 47)",
"Desert" = "Desert (n = 33)",
"Glacial forefield" = "Glacial forefield (n = 60)",
"Hot spring (n = 167)",
"Hydrothermal vent" = "Hydrothermal vent (n = 237)",
"Hypersaline" = "Hypersaline (n = 225)",
"Soda lake" = "Soda lake (n = 25)"))
gene_plot_long <- gene_plot %>%
pivot_longer(c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"),
names_to = "Gene", values_to = "Abundance") %>%
mutate(Gene = factor(Gene,
levels = c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"))) %>%
mutate(Environment = as.factor(Environment))
levels(gene_plot_long$Environment)
gene_plot_long <- gene_plot %>%
pivot_longer(c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"),
names_to = "Gene", values_to = "Abundance") %>%
mutate(Gene = factor(Gene,
levels = c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"))) %>%
mutate(Environment = as.factor(Environment)) %>%
mutate(Environment = dplyr::recode_factor(Environment,
"Acid mine drainage" = "Acid mine drainage (n = 33)",
"Cryosphere" = "Cryosphere (n = 47)",
"Desert" = "Desert (n = 33)",
"Glacial forefield" = "Glacial forefield (n = 60)",
"Hot spring (n = 167)",
"Hydrothermal vent" = "Hydrothermal vent (n = 237)",
"Hypersaline" = "Hypersaline (n = 225)",
"Soda lake" = "Soda lake (n = 25)"))
#### _KO Individual ####
# Extract and analyze list of KOs of interest
# Need to get list of KOs from Lara/Quandt Lab
# For now make barplot and heatmap of top KOs to develop script
# Data frame
gene_plot <- data.frame("Environment" = as.factor(ko_meta$Environment),
K03164 = ko_comm_DESeq$K03164,
K10955 = ko_comm_DESeq$K10955,
K00777 = ko_comm_DESeq$K00777,
K06867 = ko_comm_DESeq$K06867,
K03006 = ko_comm_DESeq$K03006,
K03010 = ko_comm_DESeq$K03010,
K05658 = ko_comm_DESeq$K05658,
K00698 = ko_comm_DESeq$K00698,
K15503 = ko_comm_DESeq$K15503,
K12811 = ko_comm_DESeq$K12811)
#### __ (II) Graphs ####
# Barplot
table(ko_meta$Environment)
gene_plot_long <- gene_plot %>%
pivot_longer(c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"),
names_to = "Gene", values_to = "Abundance") %>%
mutate(Gene = factor(Gene,
levels = c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"))) %>%
mutate(Environment = dplyr::recode_factor(Environment,
"Acid mine drainage" = "Acid mine drainage (n = 33)",
"Cryosphere" = "Cryosphere (n = 47)",
"Desert" = "Desert (n = 33)",
"Glacial forefield" = "Glacial forefield (n = 60)",
"Hot spring (n = 167)",
"Hydrothermal vent" = "Hydrothermal vent (n = 237)",
"Hypersaline" = "Hypersaline (n = 225)",
"Soda lake" = "Soda lake (n = 25)"))
gene_plot_long <- gene_plot %>%
pivot_longer(c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"),
names_to = "Gene", values_to = "Abundance") %>%
mutate(Gene = factor(Gene,
levels = c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"))) %>%
droplevels() %>%
mutate(Environment = dplyr::recode_factor(Environment,
"Acid mine drainage" = "Acid mine drainage (n = 33)",
"Cryosphere" = "Cryosphere (n = 47)",
"Desert" = "Desert (n = 33)",
"Glacial forefield" = "Glacial forefield (n = 60)",
"Hot spring (n = 167)",
"Hydrothermal vent" = "Hydrothermal vent (n = 237)",
"Hypersaline" = "Hypersaline (n = 225)",
"Soda lake" = "Soda lake (n = 25)"))
gene_plot_long <- gene_plot %>%
pivot_longer(c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"),
names_to = "Gene", values_to = "Abundance") %>%
mutate(Gene = factor(Gene,
levels = c("K03164", "K10955", "K00777", "K06867", "K03006",
"K03010", "K05658", "K00698", "K15503", "K12811"))) %>%
droplevels() %>%
mutate(Environment = dplyr::recode_factor(Environment,
"Acid mine drainage" = "Acid mine drainage (n = 33)",
"Cryosphere" = "Cryosphere (n = 47)",
"Desert" = "Desert (n = 33)",
"Glacial forefield" = "Glacial forefield (n = 60)",
"Hot spring" = "Hot spring (n = 167)",
"Hydrothermal vent" = "Hydrothermal vent (n = 237)",
"Hypersaline" = "Hypersaline (n = 225)",
"Soda lake" = "Soda lake (n = 25)"))
gene_plot_summary <- gene_plot_long %>%
group_by(Environment, Gene) %>%
summarise(mean = mean(Abundance),
se = std.error(Abundance))
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)",
fill = "KO") +
scale_fill_manual(values = brewer.pal(10, "Paired"),
labels = ko_list$KO_def[1:10]) +
theme_classic() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1),
legend.text = element_text(size = 8),
legend.key.size = unit(0.5, "cm"),
legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank())
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)",
fill = "KO") +
scale_fill_manual(values = brewer.pal(10, "Paired"),
labels = ko_list$KO_def[1:10]) +
theme_classic() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1),
legend.text = element_text(size = 8),
legend.key.size = unit(0.5, "cm"),
legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank(),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.5), "cm"))
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)",
fill = "KO") +
scale_fill_manual(values = brewer.pal(10, "Paired"),
labels = ko_list$KO_def[1:10]) +
theme_classic() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1),
legend.text = element_text(size = 8),
legend.key.size = unit(0.5, "cm"),
legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank(),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.6), "cm"))
pdf("Figs/KO_Barplot_Top", width = 8, height = 5)
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)",
fill = "KO") +
scale_fill_manual(values = brewer.pal(10, "Paired"),
labels = ko_list$KO_def[1:10]) +
theme_classic() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1),
legend.text = element_text(size = 8),
legend.key.size = unit(0.5, "cm"),
legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank(),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.6), "cm"))
dev.off()
pdf("Figs/KO_Barplot_Top.pdf", width = 8, height = 5)
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)",
fill = "KO") +
scale_fill_manual(values = brewer.pal(10, "Paired"),
labels = ko_list$KO_def[1:10]) +
theme_classic() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1),
legend.text = element_text(size = 8),
legend.key.size = unit(0.5, "cm"),
legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank(),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.6), "cm"))
dev.off()
pdf("Figs/KO_Barplot_Top.pdf", width = 8, height = 5)
ggplot(gene_plot_summary, aes(Environment, mean, fill = Gene, group = Gene)) +
geom_bar(stat = "identity", position = position_dodge(0.75)) +
geom_linerange(aes(x = Environment, ymin = mean - se, ymax = mean + se,
group = Gene),
position = position_dodge(0.75)) +
labs(x = NULL,
y = "Abundance (DESeq2 normalized)",
fill = "KO") +
scale_fill_manual(values = brewer.pal(10, "Paired"),
labels = ko_list$KO_def[1:10]) +
theme_classic() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1),
legend.text = element_text(size = 8),
legend.key.size = unit(0.5, "cm"),
legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank(),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.7), "cm"))
dev.off()
View(gene_plot)
gene_hm <- data.frame("sampleID" = ko_meta$sampleID,
K03164 = ko_comm_DESeq$K03164,
K10955 = ko_comm_DESeq$K10955,
K00777 = ko_comm_DESeq$K00777,
K06867 = ko_comm_DESeq$K06867,
K03006 = ko_comm_DESeq$K03006,
K03010 = ko_comm_DESeq$K03010,
K05658 = ko_comm_DESeq$K05658,
K00698 = ko_comm_DESeq$K00698,
K15503 = ko_comm_DESeq$K15503,
K12811 = ko_comm_DESeq$K12811) %>%
column_to_rownames(var = "sampleID")
gene_hm <- data.frame("sampleID" = ko_meta$sampleID,
K03164 = ko_comm_DESeq$K03164,
K10955 = ko_comm_DESeq$K10955,
K00777 = ko_comm_DESeq$K00777,
K06867 = ko_comm_DESeq$K06867,
K03006 = ko_comm_DESeq$K03006,
K03010 = ko_comm_DESeq$K03010,
K05658 = ko_comm_DESeq$K05658,
K00698 = ko_comm_DESeq$K00698,
K15503 = ko_comm_DESeq$K15503,
K12811 = ko_comm_DESeq$K12811) %>%
column_to_rownames(var = "sampleID") %>%
as.matrix()
pheatmap(gene_hm)
suppressWarnings(suppressMessages(library(pheatmap))) # For heatmaps
save_pheatmap_pdf <- function(x, filename, width = 7, height = 5) {
stopifnot(!missing(x))
stopifnot(!missing(filename))
pdf(filename, width=width, height=height)
grid::grid.newpage()
grid::grid.draw(x$gtable)
dev.off()
}
pheatmap(gene_hm)
# Heatmap
# Use pheatmap (pretty heatmap) package
gene_hm <- data.frame("sampleID" = ko_meta$sampleID,
K03164 = ko_comm_DESeq$K03164,
K10955 = ko_comm_DESeq$K10955,
K00777 = ko_comm_DESeq$K00777,
K06867 = ko_comm_DESeq$K06867,
K03006 = ko_comm_DESeq$K03006,
K03010 = ko_comm_DESeq$K03010,
K05658 = ko_comm_DESeq$K05658,
K00698 = ko_comm_DESeq$K00698,
K15503 = ko_comm_DESeq$K15503,
K12811 = ko_comm_DESeq$K12811) %>%
column_to_rownames(var = "sampleID") %>%
t() %>%
as.matrix()
pheatmap(gene_hm)
pheatmap(gene_hm,
scale = "row")
pheatmap(gene_hm,
scale = "row",
show_colnames = F)
View(gene_hm)
# Pretty heatmap
ann_cols <- data.frame(row.names = rownames(mar_mat),
Environment = ko_meta$Environment)
# Pretty heatmap
ann_cols <- data.frame(row.names = rownames(gene_hm),
Environment = ko_meta$Environment)
# Pretty heatmap
ann_cols <- data.frame(row.names = colnames(gene_hm),
Environment = ko_meta$Environment)
hue_pal()(4)
hue_pal()(8)
levels(ko_meta$Environment)
hue_pal()(8)[1]
ann_colors <- list(Environment = c("Acid mine drainage" = hue_pal()(8)[1],
"Cryosphere" = hue_pal()(8)[2],
"Desert" = hue_pal()(8)[3],
"Glacial forefield" = hue_pal()(8)[4],
"Hot spring" = hue_pal()(8)[5],
"Hydrothermal vent" = hue_pal()(8)[6],
"Hypersaline" = hue_pal()(8)[7],
"Soda lake" = hue_pal()(8)[8]))
# Pretty heatmap
ann_cols <- data.frame(row.names = colnames(gene_hm),
Environment = ko_meta$Environment)
ann_colors <- list(Environment = c("Acid mine drainage" = hue_pal()(8)[1],
"Cryosphere" = hue_pal()(8)[2],
"Desert" = hue_pal()(8)[3],
"Glacial forefield" = hue_pal()(8)[4],
"Hot spring" = hue_pal()(8)[5],
"Hydrothermal vent" = hue_pal()(8)[6],
"Hypersaline" = hue_pal()(8)[7],
"Soda lake" = hue_pal()(8)[8]))
pheatmap(gene_hm,
scale = "row",
show_colnames = F,
cluster_rows = F,
annotation_col = ann_cols,
annotation_colors = ann_colors)
phm1 <- pheatmap(gene_hm,
scale = "row",
show_colnames = F,
cluster_rows = F,
annotation_col = ann_cols,
annotation_colors = ann_colors)
save_pheatmap_pdf(phm1, "KO_heatmap_Top.pdf")
save_pheatmap_pdf(phm1, "Figs/KO_heatmap_Top.pdf")
