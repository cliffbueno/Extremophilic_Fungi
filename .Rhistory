}
}
}
if (ncol(mp_phyla$sign)-3 > 6) {
for (i in 1:nrow(mp_phyla_results)) {
if (mp_phyla_results[,7][i] == 1) {
mp_phyla_results$Group[i] <- substring(names(mp_phyla$sign)[7], 3)
}
}
}
if (ncol(mp_phyla$sign)-3 > 7) {
for (i in 1:nrow(mp_phyla_results)) {
if (mp_phyla_results[,8][i] == 1) {
mp_phyla_results$Group[i] <- substring(names(mp_phyla$sign)[8], 3)
}
}
}
table(mp_phyla_results$Group)
mp_phyla$str
mp_phyla_corrs <- as.data.frame(mp_phyla$str) %>%
dplyr::select(1:length(levels(input_fungi_CPM$map_loaded$Environment))) %>%
mutate(taxon = rownames(.)) %>%
filter(taxon %in% mp_phyla_results$taxon)
View(mp_phyla_corrs)
levels(input$map_loaded$Environment)
mp_phyla_corrs <- as.data.frame(mp_phyla$str) %>%
dplyr::select(1:length(levels(input_fungi_CPM$map_loaded$Environment))) %>%
mutate(taxon = rownames(.)) %>%
filter(taxon %in% mp_phyla_results$taxon) %>%
set_names(c(levels(input_fungi_CPM$map_loaded$Environment), "taxon"))
names(mp_phyla_corrs)[1:2]
# Plot heatmap with abundance barplot
input_fungi_CPM.hm.melted <- mp_phyla_results %>%
dplyr::select(taxon, names(mp_phyla_corrs)[1:length(levels(input_fungi_CPM$map_loaded$Environment))]) %>%
melt(., id.vars = c("taxon"))
length(levels(input_fungi_CPM$map_loaded$Environment))
View(mp_phyla_results)
# Plot heatmap with abundance barplot
input_fungi_CPM.hm.melted <- mp_phyla_results %>%
dplyr::select(-index, -stat, -p.value, -q.value, -Group, - num_groups) %>%
dplyr::select(taxon, everything()) %>%
melt(., id.vars = c("taxon"))
input_fungi_CPM.hm <- ggplot(data = input_fungi_CPM.hm.melted,
aes(x = factor(taxon), y = variable, fill = value)) +
geom_tile() +
scale_fill_distiller(name = "Indicator correlation index",
palette = "RdBu", direction = -1,
na.value = "transparent",
type = "div",
limits = c(-1, 1)) +
scale_x_discrete(breaks = unique(input_fungi_CPM.hm.melted$taxon),
labels = unique(input_fungi_CPM.hm.melted$taxon),
limits = rev(levels(input_fungi_CPM.hm.melted$taxon))) +
scale_y_discrete(position = "right") +
theme_minimal() +
theme(legend.position = "bottom",
legend.direction = "horizontal",
legend.title = element_text(size = 10),
legend.key.height = unit(0.5,"cm"),
legend.key.width = unit(1, "cm"),
legend.text = element_text(size = 7)) +
guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
coord_flip()
input_fungi_CPM.hm
# Get legend
input_fungi_CPM.l <- get_legend(input_fungi_CPM.hm)
# Clean
input_fungi_CPM.hm.clean <- input_fungi_CPM.hm +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(margin = margin(c(0,-5,0,0)), size = 5),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
legend.position="none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0))),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = "Group")
input_fungi_CPM.hm.clean
View(mp_phyla_results)
input_fungi_CPM.hm.melted <- mp_phyla_corrs %>%
melt(., id.vars = c("taxon"))
input_fungi_CPM.hm <- ggplot(data = input_fungi_CPM.hm.melted,
aes(x = factor(taxon), y = variable, fill = value)) +
geom_tile() +
scale_fill_distiller(name = "Indicator correlation index",
palette = "RdBu", direction = -1,
na.value = "transparent",
type = "div",
limits = c(-1, 1)) +
scale_x_discrete(breaks = unique(input_fungi_CPM.hm.melted$taxon),
labels = unique(input_fungi_CPM.hm.melted$taxon),
limits = rev(levels(input_fungi_CPM.hm.melted$taxon))) +
scale_y_discrete(position = "right") +
theme_minimal() +
theme(legend.position = "bottom",
legend.direction = "horizontal",
legend.title = element_text(size = 10),
legend.key.height = unit(0.5,"cm"),
legend.key.width = unit(1, "cm"),
legend.text = element_text(size = 7)) +
guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
coord_flip()
# Get legend
input_fungi_CPM.l <- get_legend(input_fungi_CPM.hm)
# Clean
input_fungi_CPM.hm.clean <- input_fungi_CPM.hm +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(margin = margin(c(0,-5,0,0)), size = 5),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
legend.position="none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0))),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = "Group")
input_fungi_CPM.hm.clean
input_fungi_CPM.hm
view(tax_sum_phyla)
# Add abundances to dataframe
mean_CPM <- data.frame("CPM" = rowSums(tax_sum_phyla)/nrow(input_fungi_CPM$map_loaded))
View(mean_CPM)
Group = "Environment"
# Clean
input_fungi_CPM.hm.clean <- input_fungi_CPM.hm +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(margin = margin(c(0,-5,0,0)), size = 5),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
legend.position="none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0))),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = Group)
input_fungi_CPM.hm.clean
# Add abundances to dataframe
mean_CPM <- data.frame("CPM" = rowSums(tax_sum_phyla)/nrow(input_fungi_CPM$map_loaded),
"taxon" = rownames(tax_sum_phyla))
mp_phyla_results <- mp_phyla_results %>%
left_join(., mean_CPM, by = "taxon")
View(mp_phyla_results)
# Abundance plot
input_fungi_CPM.bp.y <- ggplot(data = mp_phyla_results, aes(x = taxon, y = RelAbundance)) +
geom_bar(stat = "identity", fill = "grey") +
scale_y_continuous(position = "right") +
scale_x_discrete(limits = rev(levels(mp_phyla_results$taxon))) +
coord_flip() +
theme_minimal() +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position="none", plot.margin = margin(c(0,5,0,-5)),
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)))) +
labs(y = "Mean CPM")
input_fungi_CPM.bp.y
# Abundance plot
input_fungi_CPM.bp.y <- ggplot(data = mp_phyla_results, aes(x = taxon, y = CPM)) +
geom_bar(stat = "identity", fill = "grey") +
scale_y_continuous(position = "right") +
scale_x_discrete(limits = rev(levels(mp_phyla_results$taxon))) +
coord_flip() +
theme_minimal() +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position="none", plot.margin = margin(c(0,5,0,-5)),
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)))) +
labs(y = "Mean CPM")
input_fungi_CPM.bp.y
top <- plot_grid(input_fungi_CPM.hm.clean, input_fungi_CPM.bp.y, ncol = 2, rel_widths = c(0.7, 0.3))
pdf("FigsUpdated/mp_Phyla", width = 5, height = 5, units = "in", res = 300)
pdf("FigsUpdated/mp_Phyla", width = 5, height = 5)
plot_grid(top, input_fungi_CPM.l, nrow = 2, rel_heights = c(0.87, 0.13))
dev.off()
input_fungi_CPM.hm.clean
# Clean
input_fungi_CPM.hm.clean <- input_fungi_CPM.hm +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(margin = margin(c(0,-5,0,0)), size = 5, angle = 45, hjust = 1),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
legend.position="none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0))),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = Group)
input_fungi_CPM.hm.clean
# Clean
input_fungi_CPM.hm.clean <- input_fungi_CPM.hm +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(margin = margin(c(0,-5,0,0)), size = 5),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)),
angle = 45, hjust = 1),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = Group)
input_fungi_CPM.hm.clean
# Clean
input_fungi_CPM.hm.clean <- input_fungi_CPM.hm +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(margin = margin(c(0,-5,0,0)), size = 5),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)),
angle = 45, vjust = 1),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = Group)
input_fungi_CPM.hm.clean
# Clean
input_fungi_CPM.hm.clean <- input_fungi_CPM.hm +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(margin = margin(c(0,-5,0,0)), size = 5),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)),
angle = 45, vjust = 0),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = Group)
input_fungi_CPM.hm.clean
# Clean
input_fungi_CPM.hm.clean <- input_fungi_CPM.hm +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(margin = margin(c(0,-5,0,0)), size = 5),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)),
angle = 45, hjust = 0),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = Group)
input_fungi_CPM.hm.clean
top <- plot_grid(input_fungi_CPM.hm.clean, input_fungi_CPM.bp.y, ncol = 2, rel_widths = c(0.7, 0.3))
pdf("FigsUpdated/mp_Phyla", width = 5, height = 5)
plot_grid(top, input_fungi_CPM.l, nrow = 2, rel_heights = c(0.87, 0.13))
dev.off()
top <- plot_grid(input_fungi_CPM.hm.clean, input_fungi_CPM.bp.y, ncol = 2, rel_widths = c(0.7, 0.3),
align = "hv", axis = "b")
top
top <- plot_grid(input_fungi_CPM.hm.clean, input_fungi_CPM.bp.y, ncol = 2, rel_widths = c(0.7, 0.3),
align = "v")
top
top <- plot_grid(input_fungi_CPM.hm.clean, input_fungi_CPM.bp.y, ncol = 2, rel_widths = c(0.7, 0.3),
align = "h")
top
pdf("FigsUpdated/mp_Phyla", width = 5, height = 5)
plot_grid(top, input_fungi_CPM.l, nrow = 2, rel_heights = c(0.87, 0.13))
dev.off()
input_fungi_CPM.bp.y
# Abundance plot
input_fungi_CPM.bp.y <- ggplot(data = mp_phyla_results, aes(x = taxon, y = CPM)) +
geom_bar(stat = "identity", fill = "grey") +
scale_y_continuous(position = "right") +
scale_x_discrete(limits = rev(levels(mp_phyla_results$taxon))) +
coord_flip() +
theme_minimal() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(c(0,5,0,0)),
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)))) +
labs(y = "Mean CPM")
input_fungi_CPM.bp.y
# Abundance plot
input_fungi_CPM.bp.y <- ggplot(data = mp_phyla_results, aes(x = taxon, y = CPM)) +
geom_bar(stat = "identity", fill = "grey") +
scale_y_continuous(position = "right") +
scale_x_discrete(limits = rev(levels(mp_phyla_results$taxon))) +
coord_flip() +
theme_minimal() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(c(0,0,0,0)),
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)))) +
labs(y = "Mean CPM")
input_fungi_CPM.bp.y
top <- plot_grid(input_fungi_CPM.hm.clean, input_fungi_CPM.bp.y, ncol = 2,
rel_widths = c(0.7, 0.3), align = "h")
pdf("FigsUpdated/mp_Phyla", width = 5, height = 5)
plot_grid(top, input_fungi_CPM.l, nrow = 2, rel_heights = c(0.87, 0.13))
dev.off()
# Abundance plot
input_fungi_CPM.bp.y <- ggplot(data = mp_phyla_results, aes(x = taxon, y = CPM)) +
geom_bar(stat = "identity", fill = "grey") +
scale_y_continuous(position = "right") +
scale_x_discrete(limits = rev(levels(mp_phyla_results$taxon))) +
coord_flip() +
theme_minimal() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(c(0,5,0,0)),
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)))) +
labs(y = "Mean CPM")
top <- plot_grid(input_fungi_CPM.hm.clean, input_fungi_CPM.bp.y, ncol = 2,
rel_widths = c(0.7, 0.3), align = "h")
pdf("FigsUpdated/mp_Phyla", width = 5, height = 5)
plot_grid(top, input_fungi_CPM.l, nrow = 2, rel_heights = c(0.87, 0.13))
dev.off()
input_fungi_CPM.hm <- ggplot(data = input_fungi_CPM.hm.melted,
aes(x = factor(taxon), y = variable, fill = value)) +
geom_tile() +
scale_fill_distiller(name = "Indicator correlation index",
palette = "RdBu", direction = -1,
na.value = "transparent",
type = "div",
limits = c(-1, 1)) +
scale_x_discrete(breaks = unique(input_fungi_CPM.hm.melted$taxon),
labels = unique(input_fungi_CPM.hm.melted$taxon),
limits = rev(levels(input_fungi_CPM.hm.melted$taxon))) +
scale_y_discrete(position = "right") +
theme_minimal() +
theme(legend.position = "bottom",
legend.direction = "horizontal",
legend.title = element_text(size = 8),
legend.key.height = unit(0.4,"cm"),
legend.key.width = unit(8, "cm"),
legend.text = element_text(size = 6)) +
guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
coord_flip()
# Get legend
input_fungi_CPM.l <- get_legend(input_fungi_CPM.hm)
# Clean
input_fungi_CPM.hm.clean <- input_fungi_CPM.hm +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(margin = margin(c(0,-5,0,0)), size = 5),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)),
angle = 45, hjust = 0),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = Group)
# Abundance plot
input_fungi_CPM.bp.y <- ggplot(data = mp_phyla_results, aes(x = taxon, y = CPM)) +
geom_bar(stat = "identity", fill = "grey") +
scale_y_continuous(position = "right") +
scale_x_discrete(limits = rev(levels(mp_phyla_results$taxon))) +
coord_flip() +
theme_minimal() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(c(0,5,0,0)),
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)))) +
labs(y = "Mean CPM")
top <- plot_grid(input_fungi_CPM.hm.clean, input_fungi_CPM.bp.y, ncol = 2,
rel_widths = c(0.7, 0.3), align = "h")
pdf("FigsUpdated/mp_Phyla", width = 5, height = 5)
plot_grid(top, input_fungi_CPM.l, nrow = 2, rel_heights = c(0.87, 0.13))
dev.off()
input_fungi_CPM.hm <- ggplot(data = input_fungi_CPM.hm.melted,
aes(x = factor(taxon), y = variable, fill = value)) +
geom_tile() +
scale_fill_distiller(name = "Indicator correlation index",
palette = "RdBu", direction = -1,
na.value = "transparent",
type = "div",
limits = c(-1, 1)) +
scale_x_discrete(breaks = unique(input_fungi_CPM.hm.melted$taxon),
labels = unique(input_fungi_CPM.hm.melted$taxon),
limits = rev(levels(input_fungi_CPM.hm.melted$taxon))) +
scale_y_discrete(position = "right") +
theme_minimal() +
theme(legend.position = "bottom",
legend.direction = "horizontal",
legend.title = element_text(size = 8),
legend.key.height = unit(0.4,"cm"),
legend.key.width = unit(0.8, "cm"),
legend.text = element_text(size = 6)) +
guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
coord_flip()
# Get legend
input_fungi_CPM.l <- get_legend(input_fungi_CPM.hm)
# Clean
input_fungi_CPM.hm.clean <- input_fungi_CPM.hm +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(margin = margin(c(0,-5,0,0)), size = 5),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)),
angle = 45, hjust = 0),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = Group)
top <- plot_grid(input_fungi_CPM.hm.clean, input_fungi_CPM.bp.y, ncol = 2,
rel_widths = c(0.7, 0.3), align = "h")
pdf("FigsUpdated/mp_Phyla", width = 5, height = 5)
plot_grid(top, input_fungi_CPM.l, nrow = 2, rel_heights = c(0.87, 0.13))
dev.off()
source("plot_multipatt.R")
plot_multipatt(mp_obj = mp_phyla,
input = input_fungi_CPM,
tax_sum = tax_sum_phyla,
group = "Environment")
plot_multipatt(mp_obj = mp_class,
input = input_fungi_CPM,
tax_sum = tax_sum_class,
group = "Environment")
plot_multipatt(mp_obj = mp_order,
input = input_fungi_CPM,
tax_sum = tax_sum_order,
group = "Environment")
plot_multipatt(mp_obj = mp_family,
input = input_fungi_CPM,
tax_sum = tax_sum_family,
group = "Environment")
plot_multipatt(mp_obj = mp_genus,
input = input_fungi_CPM,
tax_sum = tax_sum_genus,
group = "Environment")
# Genus
tax_sum_genus <- summarize_taxonomy(input_fungi_CPM, level = 6, report_higher_tax = F, relative = F)
set.seed(425)
mp_genus <- multipatt(t(input_fungi_CPM$data_loaded),
input_fungi_CPM$map_loaded$Environment,
func = "r.g",
control = how(nperm=999))
summary(mp_genus) # Acid mine 8, cyrosphere 44, desert 7, glacial forefield 1, hot spring 2, soda lake 112
plot_multipatt(mp_obj = mp_genus,
input = input_fungi_CPM,
tax_sum = tax_sum_genus,
group = "Environment")
View(mp_phyla_corrs)
View(mp_phyla_results)
source("plot_multipatt.R")
plot_multipatt(mp_obj = mp_order,
input = input_fungi_CPM,
tax_sum = tax_sum_order,
group = "Environment")
pdf("FigsUpdated/mp_Class", width = 5, height = 5)
plot_multipatt(mp_obj = mp_class,
input = input_fungi_CPM,
tax_sum = tax_sum_class,
group = "Environment")
dev.off()
pdf("FigsUpdated/mp_Order", width = 5, height = 5)
plot_multipatt(mp_obj = mp_order,
input = input_fungi_CPM,
tax_sum = tax_sum_order,
group = "Environment")
dev.off()
pdf("FigsUpdated/mp_Phyla", width = 5, height = 7)
plot_multipatt(mp_obj = mp_family,
input = input_fungi_CPM,
tax_sum = tax_sum_family,
group = "Environment")
dev.off()
pdf("FigsUpdated/mp_Family", width = 5, height = 7)
plot_multipatt(mp_obj = mp_family,
input = input_fungi_CPM,
tax_sum = tax_sum_family,
group = "Environment")
dev.off()
pdf("FigsUpdated/mp_Phyla", width = 5, height = 5)
plot_multipatt(mp_obj = mp_phyla,
input = input_fungi_CPM,
tax_sum = tax_sum_phyla,
group = "Environment")
dev.off()
pdf("FigsUpdated/mp_Genus", width = 5, height = 10)
plot_multipatt(mp_obj = mp_genus,
input = input_fungi_CPM,
tax_sum = tax_sum_genus,
group = "Environment")
dev.off()
source("plot_multipatt.R")
pdf("FigsUpdated/mp_Phyla.pdf", width = 5, height = 5)
plot_multipatt(mp_obj = mp_phyla,
input = input_fungi_CPM,
tax_sum = tax_sum_phyla,
group = "Environment")
dev.off()
pdf("FigsUpdated/mp_Class.pdf", width = 5, height = 5)
plot_multipatt(mp_obj = mp_class,
input = input_fungi_CPM,
tax_sum = tax_sum_class,
group = "Environment")
dev.off()
pdf("FigsUpdated/mp_Order.pdf", width = 5, height = 7)
plot_multipatt(mp_obj = mp_order,
input = input_fungi_CPM,
tax_sum = tax_sum_order,
group = "Environment")
dev.off()
pdf("FigsUpdated/mp_Family.pdf", width = 5, height = 10)
plot_multipatt(mp_obj = mp_family,
input = input_fungi_CPM,
tax_sum = tax_sum_family,
group = "Environment")
dev.off()
pdf("FigsUpdated/mp_Genus.pdf", width = 5, height = 12)
plot_multipatt(mp_obj = mp_genus,
input = input_fungi_CPM,
tax_sum = tax_sum_genus,
group = "Environment")
dev.off()
