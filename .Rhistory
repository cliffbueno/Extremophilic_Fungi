View(tax_sum_Class)
View(tax_sum_Class)
rownames(tax_sum_Class)
View(ts_c)
write_xlsx(ts_c, "data/TableS3.xlsx", format_headers = F)
ggplot(input$map_loaded, aes(GenomeSize, count)) +
geom_point(size = 1.5, alpha = 0.25) +
geom_smooth(method = "lm") +
labs(x = "Assembled genome size",
y = "Assigned genus reads") +
theme_bw() +
theme(axis.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 10))
ggplot(input$map_loaded, aes(reorder(`Environment`, count, mean), count)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 1.5, alpha = 0.25, width = 0.25) +
labs(x = "Environment",
y = "# Reads") +
theme_bw() +
theme(axis.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
ggplot(input$map_loaded, aes(reorder(`Environment`, GenomeSize, mean), GenomeSize)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 1.5, alpha = 0.25, width = 0.25) +
labs(x = "Environment",
y = "Assembled metagenome size") +
theme_bw() +
theme(axis.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
ggplot(input$map_loaded, aes(reorder(`Environment`, GenomeSize, median), GenomeSize)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 1.5, alpha = 0.25, width = 0.25) +
labs(x = "Environment",
y = "Assembled metagenome size") +
theme_bw() +
theme(axis.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
ggplot(input$map_loaded, aes(reorder(`Environment`, GenomeSize, median), log10(GenomeSize))) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 1.5, alpha = 0.25, width = 0.25) +
labs(x = "Environment",
y = "Assembled metagenome size") +
theme_bw() +
theme(axis.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
# Log axis
ggplot(input$map_loaded, aes(reorder(`Environment`, GenomeSize, median), GenomeSize)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 1.5, alpha = 0.25, width = 0.25) +
labs(x = "Environment",
y = "Assembled metagenome size") +
scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
annotation_logticks(sides = "l", outside = T, short = unit(1,"mm"), mid = unit(1,"mm"), long = unit(2,"mm")) +
theme_bw() +
theme(axis.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
ggplot(input$map_loaded, aes(reorder(`Environment`, Fungi, median), GenomeSize)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 1.5, alpha = 0.25, width = 0.25) +
labs(x = "Environment",
y = "Assembled metagenome size") +
scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
annotation_logticks(sides = "l", outside = T, short = unit(1,"mm"), mid = unit(1,"mm"), long = unit(2,"mm")) +
theme_bw() +
theme(axis.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
ggplot(env_prev, aes(reorder(Environment, num_samples, mean), prevalence)) +
geom_bar(stat = "identity") +
labs(x = NULL,
y = "Fungal prevalence (%)") +
theme_classic() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
ggplot(input$map_loaded, aes(reorder(`Environment`, Fungi, median), GenomeSize)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 1.5, alpha = 0.25, width = 0.25) +
labs(x = NULL,
y = "Assembled metagenome size") +
scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
annotation_logticks(sides = "l", outside = T, short = unit(1,"mm"), mid = unit(1,"mm"), long = unit(2,"mm")) +
theme_bw() +
theme(axis.title.x = element_text(size = 12, face = "bold"),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
# Log axis - use this, add to Figure 1.
gs <- ggplot(input$map_loaded, aes(reorder(`Environment`, Fungi, median), GenomeSize)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 1.5, alpha = 0.25, width = 0.25) +
labs(x = NULL,
y = "Assembled metagenome size") +
scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
annotation_logticks(sides = "l", outside = T, short = unit(1,"mm"), mid = unit(1,"mm"), long = unit(2,"mm")) +
theme_bw() +
theme(axis.title.x = element_text(size = 12, face = "bold"),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
br_plot <- ggplot(input$map_loaded, aes(reorder(Environment, Fungi, median), Fungi)) +
geom_jitter(size = 1, alpha = 0.2, width = 0.4) +
geom_text(data = tuk, aes(Environment, y, label = label),
size = 4, color = "black", hjust = 0.5) +
labs(x = NULL, y = "Fungal relative abundance") +
scale_y_continuous(breaks = c(0, 0.02, 0.04, 0.06, 0.08, 0.10)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
#axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.x = element_blank(),
strip.text = element_text(size = 10))
br_plot
f1b <- plot_grid(br_plot, gs, ncol = 1, rel_heights = 0.4, 0.6)
gs
br_plot
f1b <- plot_grid(br_plot, gs, ncol = 1, rel_heights = c(0.4, 0.6))
f1b
# Log axis - use this, add to Figure 1.
gs <- ggplot(input$map_loaded, aes(reorder(`Environment`, Fungi, median), GenomeSize)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 1.5, alpha = 0.25, width = 0.25) +
labs(x = NULL,
y = "Assembled metagenome size") +
scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
annotation_logticks(sides = "l", outside = T, short = unit(1,"mm"), mid = unit(1,"mm"), long = unit(2,"mm")) +
theme_bw() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
br_plot <- ggplot(input$map_loaded, aes(reorder(Environment, Fungi, median), Fungi*100)) +
geom_jitter(size = 1, alpha = 0.2, width = 0.4) +
geom_text(data = tuk, aes(Environment, y, label = label),
size = 4, color = "black", hjust = 0.5) +
labs(x = NULL, y = "Fungal % abundance") +
scale_y_continuous(breaks = c(0, 0.02, 0.04, 0.06, 0.08, 0.10)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
#axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.x = element_blank(),
strip.text = element_text(size = 10))
br_plot
tuk <- emmeans(object = b1, specs = "Environment") %>%
cld(object = ., adjust = "Tukey", Letters = letters, alpha = 0.05) %>%
mutate(name = "rich",
y = rep(11, nrow(.))) %>%
mutate(label = c("a", "a", "abc", "ab", "bc", "abc", "c", "abc", "bc"))
br_plot <- ggplot(input$map_loaded, aes(reorder(Environment, Fungi, median), Fungi*100)) +
geom_jitter(size = 1, alpha = 0.2, width = 0.4) +
geom_text(data = tuk, aes(Environment, y, label = label),
size = 4, color = "black", hjust = 0.5) +
labs(x = NULL, y = "Fungal % abundance") +
scale_y_continuous(breaks = c(0, 0.02, 0.04, 0.06, 0.08, 0.10)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
#axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.x = element_blank(),
strip.text = element_text(size = 10))
br_plot
br_plot <- ggplot(input$map_loaded, aes(reorder(Environment, Fungi, median), Fungi*100)) +
geom_jitter(size = 1, alpha = 0.2, width = 0.4) +
geom_text(data = tuk, aes(Environment, y, label = label),
size = 4, color = "black", hjust = 0.5) +
labs(x = NULL, y = "Fungal % abundance") +
scale_y_continuous(breaks = c(0, 2, 4, 6, 8, 10)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
#axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.x = element_blank(),
strip.text = element_text(size = 10))
br_plot
f1b <- plot_grid(br_plot, gs, ncol = 1, rel_heights = c(0.4, 0.6))
f1b
f1b <- plot_grid(br_plot, gs, ncol = 1, rel_heights = c(0.4, 0.6), align = "v")
f1b
#f1 <- plot_grid(f1a, br_plot, ncol = 2, labels = "AUTO")
#f1
f1 <- plot_grid(f1a, f1b, ncol = 2, labels = "AUTO")
f1
png("FinalFigs/Figure1.png", width = 7, height = 5, units = "in", res = 300)
f1
dev.off()
br_plot <- ggplot(input$map_loaded, aes(reorder(Environment, Fungi, median), Fungi*100)) +
geom_jitter(size = 1, alpha = 0.2, width = 0.4) +
geom_text(data = tuk, aes(Environment, y, label = label),
size = 4, color = "black", hjust = 0.5) +
labs(x = NULL, y = "Fungal % abund.") +
scale_y_continuous(breaks = c(0, 2, 4, 6, 8, 10)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
#axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.x = element_blank(),
strip.text = element_text(size = 10))
br_plot
# Log axis - use this, add to Figure 1.
gs <- ggplot(input$map_loaded, aes(reorder(`Environment`, Fungi, median), GenomeSize)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 1.5, alpha = 0.25, width = 0.25) +
labs(x = NULL,
y = "Assembly size") +
scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
annotation_logticks(sides = "l", outside = T, short = unit(1,"mm"), mid = unit(1,"mm"), long = unit(2,"mm")) +
theme_bw() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
f1b <- plot_grid(br_plot, gs, ncol = 1, rel_heights = c(0.4, 0.6), align = "v")
f1b
#f1 <- plot_grid(f1a, br_plot, ncol = 2, labels = "AUTO")
#f1
f1 <- plot_grid(f1a, f1b, ncol = 2, labels = "AUTO")
f1
png("FinalFigs/Figure1.png", width = 7, height = 5, units = "in", res = 300)
f1
dev.off()
f1a <- plot_grid(n, prev, ncol = 1, rel_heights = c(0.4, 0.6), labels = "AUTO")
f1a
f1b <- plot_grid(br_plot, gs, ncol = 1, rel_heights = c(0.4, 0.6), align = "v",
labels = c("C", "D"))
f1b
#f1 <- plot_grid(f1a, br_plot, ncol = 2, labels = "AUTO")
#f1
f1 <- plot_grid(f1a, f1b, ncol = 2, labels = "AUTO")
f1
#f1 <- plot_grid(f1a, br_plot, ncol = 2, labels = "AUTO")
#f1
f1 <- plot_grid(f1a, f1b, ncol = 2)
f1
png("FinalFigs/Figure1.png", width = 7, height = 5, units = "in", res = 300)
f1
dev.off()
prev <- ggplot(env_prev, aes(reorder(Environment, num_samples, mean), prevalence)) +
geom_bar(stat = "identity") +
labs(x = NULL,
y = "Fungal % prev.") +
theme_classic() +
theme(axis.title = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
f1a <- plot_grid(n, prev, ncol = 1, rel_heights = c(0.4, 0.6), labels = "AUTO")
f1a
f1b <- plot_grid(br_plot, gs, ncol = 1, rel_heights = c(0.4, 0.6), align = "v",
labels = c("C", "D"))
f1b
#f1 <- plot_grid(f1a, br_plot, ncol = 2, labels = "AUTO")
#f1
f1 <- plot_grid(f1a, f1b, ncol = 2)
f1
png("FinalFigs/Figure1.png", width = 7, height = 5, units = "in", res = 300)
f1
dev.off()
f1a
dev.off()
f1a <- plot_grid(n, prev, ncol = 1, rel_heights = c(0.4, 0.6), labels = "AUTO")
f1a
f1b <- plot_grid(br_plot, gs, ncol = 1, rel_heights = c(0.4, 0.6), align = "v",
labels = c("C", "D"))
f1b
#f1 <- plot_grid(f1a, br_plot, ncol = 2, labels = "AUTO")
#f1
f1 <- plot_grid(f1a, f1b, ncol = 2)
f1
png("FinalFigs/Figure1.png", width = 7, height = 5, units = "in", res = 300)
f1
dev.off()
max(input$map_loaded$GenomeSize)
min(input$map_loaded$GenomeSize)
# Now increase the cutoff even more - 750!
sum(ko_richness$richness_KO > 750) # 44 with > 750
ko_meta_filt <- ko_meta %>%
filter(richness_KO > 750)
ko_comm_DESeq_filt <- ko_comm_DESeq %>%
filter(rownames(.) %in% rownames(ko_meta_filt))
View(ko_meta_filt)
#### _KO750 Taxa ####
# Get the same 44 samples from the KO750 comparison and make PCoA from fungal_CPM_nz
input_fungi_CPM_nz_44 <- filter_data(input_fungi_CPM_nz,
filter_cat = "taxon_oid",
keep_vals = ko_meta_filt$taxon_oid)
# BC
bc <- calc_dm(input_fungi_CPM_nz_44$data_loaded)
set.seed(1150)
adonis2(bc ~ Environment, data = input_fungi_CPM_nz_44$map_loaded) # R2 = 0.15, p = 0.001
anova(betadisper(bc, input_fungi_CPM_nz_44$map_loaded$Environment)) # Dispersion not homogeneous
pcoa <- cmdscale(bc, k = nrow(input_fungi_CPM_nz_44$map_loaded) - 1, eig = T)
pcoaA1 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[2]*100, digits = 1)
input_fungi_CPM_nz_44$map_loaded$Axis01 <- scores(pcoa)[,1]
input_fungi_CPM_nz_44$map_loaded$Axis02 <- scores(pcoa)[,2]
micro.hulls <- ddply(input_fungi_CPM_nz_44$map_loaded, c("Environment"), find_hull)
bc44 <- ggplot(input_fungi_CPM_nz_44$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 2, alpha = 0.5, aes(colour = Environment),
show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = "")) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme_bw() +
theme(legend.position = "right",
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 10),
panel.grid = element_blank())
bc44
jac <- calc_dm(input_fungi_CPM_nz_44$data_loaded, method = "jaccard")
set.seed(1150)
adonis2(jac ~ Environment, data = input_fungi_CPM_nz_44$map_loaded) # R2 = 0.48, p = 0.001
anova(betadisper(jac, input_fungi_CPM_nz_44$map_loaded$Environment)) # Dispersion homogeneous
pcoa <- cmdscale(jac, k = nrow(input_fungi_CPM_nz_44$map_loaded) - 1, eig = T)
pcoaA1 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[2]*100, digits = 1)
input_fungi_CPM_nz_44$map_loaded$Axis01 <- scores(pcoa)[,1]
input_fungi_CPM_nz_44$map_loaded$Axis02 <- scores(pcoa)[,2]
micro.hulls <- ddply(input_fungi_CPM_nz_44$map_loaded, c("Environment"), find_hull)
jac44 <- ggplot(input_fungi_CPM_nz_44$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 2, alpha = 0.5, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = "")) +
scale_colour_manual(values = c(hue_pal()(9)[1:5], hue_pal()(9)[7:9])) +
#xlim(-0.2, 0.29) +
#ylim(-0.3, 0.12) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
jac44
jac44 <- ggplot(input_fungi_CPM_nz_44$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 2, alpha = 0.5, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Jaccard") +
scale_colour_manual(values = c(hue_pal()(9)[1:5], hue_pal()(9)[7:9])) +
#xlim(-0.2, 0.29) +
#ylim(-0.3, 0.12) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
jac44
range(input_fungi_CPM_nz_44$map_loaded$Axis01)
range(input_fungi_CPM_nz_44$map_loaded$Axis02)
pcoa <- cmdscale(bc, k = nrow(input_fungi_CPM_nz_44$map_loaded) - 1, eig = T)
pcoaA1 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[2]*100, digits = 1)
input_fungi_CPM_nz_44$map_loaded$Axis01 <- scores(pcoa)[,1]
input_fungi_CPM_nz_44$map_loaded$Axis02 <- scores(pcoa)[,2]
micro.hulls <- ddply(input_fungi_CPM_nz_44$map_loaded, c("Environment"), find_hull)
bc44 <- ggplot(input_fungi_CPM_nz_44$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 2, alpha = 0.5, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Bray-Curtis") +
scale_colour_manual(values = c(hue_pal()(9)[1:5], hue_pal()(9)[7:9])) +
#xlim(-0.2, 0.29) +
#ylim(-0.3, 0.12) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
bc44
range(input_fungi_CPM_nz_44$map_loaded$Axis01) # -0.48 to 0.35
range(input_fungi_CPM_nz_44$map_loaded$Axis02) # -0.16 to 0.18
bc44 <- ggplot(input_fungi_CPM_nz_44$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 2, alpha = 0.5, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Bray-Curtis") +
scale_colour_manual(values = c(hue_pal()(9)[1:5], hue_pal()(9)[7:9])) +
xlim(-0.48, 0.35) +
ylim(-0.30, 0.34) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
bc44
bc44 <- ggplot(input_fungi_CPM_nz_44$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 2, alpha = 0.5, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Bray-Curtis") +
scale_colour_manual(values = c(hue_pal()(9)[1:5], hue_pal()(9)[7:9])) +
xlim(-0.48, 0.35) +
ylim(-0.30, 0.35) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
bc44
bc44 <- ggplot(input_fungi_CPM_nz_44$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 2, alpha = 0.5, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Bray-Curtis") +
scale_colour_manual(values = c(hue_pal()(9)[1:5], hue_pal()(9)[7:9])) +
xlim(-0.48, 0.35) +
ylim(-0.31, 0.34) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
bc44
bc44 <- ggplot(input_fungi_CPM_nz_44$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 2, alpha = 0.5, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Bray-Curtis",
colour = "Environment") +
scale_colour_manual(values = c(hue_pal()(9)[1:5], hue_pal()(9)[7:9])) +
xlim(-0.48, 0.35) +
ylim(-0.31, 0.34) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "right",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
bc44
leg44 <- get_legend(bc44)
bc44 <- bc44 + theme(legend.position = "none")
pcoa <- cmdscale(jac, k = nrow(input_fungi_CPM_nz_44$map_loaded) - 1, eig = T)
pcoaA1 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[2]*100, digits = 1)
input_fungi_CPM_nz_44$map_loaded$Axis01 <- scores(pcoa)[,1]
input_fungi_CPM_nz_44$map_loaded$Axis02 <- scores(pcoa)[,2]
micro.hulls <- ddply(input_fungi_CPM_nz_44$map_loaded, c("Environment"), find_hull)
jac44 <- ggplot(input_fungi_CPM_nz_44$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 2, alpha = 0.5, aes(colour = Environment), show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
title = "Jaccard") +
scale_colour_manual(values = c(hue_pal()(9)[1:5], hue_pal()(9)[7:9])) +
xlim(-0.48, 0.35) +
ylim(-0.31, 0.34) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = 0),
panel.grid = element_blank())
jac44
plot_grid(bc44, jac44, ko_pcoa_leg, ncol = 3, rel_widths = c(2.5,2.5,1.1),
labels = c("A", "B"))
plot_grid(bc44, jac44, leg44, ncol = 3, rel_widths = c(2.5,2.5,1.1),
labels = c("A", "B"))
png("FinalFigs/FigureS5.png", width = 8.5, height = 5, units = "in", res = 300)
plot_grid(bc44, jac44, leg44, ncol = 3, rel_widths = c(2.5,2.5,1.1),
labels = c("A", "B"))
dev.off()
jac44
