# Filter out non-Illumina datasets (removes 71 samples. 1038 remaining)
table(input$map_loaded$`Sequencing Method`)
input <- filter_data(input,
filter_cat = "Sequencing Method",
filter_vals = c("454", "454 GS FLX", "454 GS FLX Titanium",
"454 GS FLX Titanium, Illumina GAIIx",
"454 GS FLX Titanium, Illumina HiSeq 2000",
"Illumina HiSeq 2000, 454 GS FLX Titanium"))
# Filter by Assembly method? For now now. Also many unknowns...
table(input$map_loaded$`Assembly Method`)
#### __Filter ####
# Now filter to euk and then fungi (extract fungal phyla)
input_euk <- filter_taxa_from_input(input,
taxa_to_keep = "Eukaryota",
at_spec_level = 1)
# Check phyla
table(input_euk$taxonomy_loaded$taxonomy2)
# List of RefSeq fungal phyla
fungal_phyla_names <- c("Ascomycota", "Basidiomycota", "Blastocladiomycota",
"Chytridiomycota","Cryptomycota", "Microsporidia",
"Mucoromycota", "Nephridiophagidae", "Olpidiomycota",
"Sanchytriomycota", "Zoopagomycota")
input_fungi <- filter_taxa_from_input(input_euk,
taxa_to_keep = fungal_phyla_names,
at_spec_level = 2)
# Filter out plasmids (2 removed)
input_fungi <- filter_taxa_from_input(input_fungi,
taxa_to_remove = "Plasmid:Eukaryota",
at_spec_level = 1)
#### _Relative ####
# Remove zeroes (174 removed, 864 remaining)
countFun <- as.data.frame(sort(colSums(input_fungi_CPM$data_loaded))) %>%
filter(`sort(colSums(input_fungi_CPM$data_loaded))` == 0)
input_fungi_nz <- filter_data(input_fungi,
filter_cat = "sampleID",
filter_vals = rownames(countFun))
names(input$map_loaded)
# Need to do several for loops
# For subseting, summarizing, plotting, store dfs in a list to enable for loop/indexing
env <- list()
studyN <- list()
df <- list()
phy <- list()
p_colors <- list()
p <- list()
# Subset by Environment (9 data frames)
for (i in 1:length(levels(input_fungi_nz$map_loaded$Environment))) {
env[[i]] <- filter_data(input_fungi_nz,
filter_cat = "Environment",
keep_vals = levels(input_fungi_nz$map_loaded$Environment)[i])
}
# Do one for each, or by individual studies? How many studies in each env?
length(levels(env[[1]]$map_loaded$Study.Name2)) # 4
# Do one for each, or by individual studies? How many studies in each env?
length(levels(env[[1]]$map_loaded$`Study.Name2`)) # 4
length(levels(env[[2]]$map_loaded$`Study.Name2`)) # 10
length(levels(env[[3]]$map_loaded$`Study.Name2`)) # 3
length(levels(env[[4]]$map_loaded$`Study.Name2`)) # 7
length(levels(env[[5]]$map_loaded$`Study.Name2`)) # 1
length(levels(env[[6]]$map_loaded$`Study.Name2`)) # 24
length(levels(env[[7]]$map_loaded$`Study.Name2`)) # 41
length(levels(env[[8]]$map_loaded$`Study.Name2`)) # 27
length(levels(env[[9]]$map_loaded$`Study.Name2`)) # 4
# Probably best to show some of the variability within environment type
# For example, Shu and Huang 2022 have 4-5 sites for each environment
# Here let's do 1-4, for env. with more than 4 studies, take 4 with greatest sample size
# Could also decide to show sites with most fungi instead of most samples
for (i in 1:length(env)) {
studyN[[i]] <- as.data.frame(table(env[[i]]$map_loaded$`Study.Name2`)) %>%
arrange(desc(Freq)) %>%
slice_head(n = 4)
}
studies <- rbind(studyN[[1]], studyN[[2]], studyN[[3]], studyN[[4]],
studyN[[5]], studyN[[6]], studyN[[7]], studyN[[8]],
studyN[[9]]) %>%
mutate(Var1 = as.character(Var1))
# Subset Environments by Studies
counter <- 1
for (i in 1:length(env)) {
k <- nrow(studyN[[i]])
for (l in 1:k) {
df[[counter]] <- filter_data(env[[i]],
filter_cat = "Study.Name2",
keep_vals = studyN[[i]]$Var1[l])
counter <- counter + 1
}
}
# Location and n (for plot titles)
loc_n <- as.data.frame(matrix(NA, nrow = length(df), ncol = 3)) %>%
set_names(c("Location", "n", "Environment"))
for (i in 1:length(df)) {
loc_n$Location[i] <- levels(df[[i]]$map_loaded$`Location2`)[1]
loc_n$n[i] <- nrow(df[[i]]$map_loaded)
loc_n$Environment[i] <- levels(df[[i]]$map_loaded$Environment)[1]
}
for (i in 1:length(df)) {
df[[i]]$map_loaded$Location <- paste(loc_n$Location[i],"\n", "(n = ", loc_n$n[i], ")", sep = "")
}
View(loc_n)
# Manually update some long ones
df[[28]]$map_loaded$Location <- "Garden Lake, Australia\n(n = 117)"
df[[30]]$map_loaded$Location <- "Eisfeld solar saltern, Namibia\n(n = 7)"
# Phyla
for (i in 1:nrow(studies)) {
phy[[i]] <- summarize_taxonomy(df[[i]], level = 2, report_higher_tax = F, relative = T)
}
# Colors
phyla_present <- as.data.frame(table(input_fungi_nz$taxonomy_loaded$taxonomy2)) %>%
mutate(Var1 = as.character(Var1))
for (i in 1:length(df)) {
p_colors[[i]] <- brewer.pal(7, "Paired")
p_colors[[i]] <- subset(p_colors[[i]],
phyla_present$Var1 %in% df[[i]]$taxonomy_loaded$taxonomy2)
}
# Pies
for (i in 1:nrow(studies)) {
t <- df[[i]]$map_loaded$Location
p[[i]] <- plot_taxa_bars(phy[[i]], df[[i]]$map_loaded, "Study.Name2", 20) +
# geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start=0) +
scale_fill_manual(values = p_colors[[i]]) +
theme_void() +
ggtitle(t) +
theme(legend.position = "none",
plot.title = element_text(size = 5, hjust = 0.5),
plot.margin = margin(0, 0, 0, 0, "pt"))
}
# Get legend - use one with all 7 phyla
t <- df[[5]]$map_loaded$Location
p_forleg <- plot_taxa_bars(phy[[5]], df[[5]]$map_loaded, "Study.Name2", 20) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start=0) +
scale_fill_manual(values = p_colors[[5]]) +
labs(fill = "Phylum") +
theme_void() +
ggtitle(t) +
theme(legend.position = "right",
# legend.key.size = unit(0.25, "cm"),
plot.title = element_text(size = 10, hjust = 0.5, vjust = -15),
plot.margin = margin(0,0,0,0, "pt"))
p_forleg
pie_leg <- get_legend(p_forleg)
# Make huge multipanel
table(loc_n$Environment)
# 4, 4, 3, 4, 4, 4, 4, 4, 4
pies <- plot_grid(p[[1]], p[[2]], p[[3]], p[[4]],
p[[5]], p[[6]], p[[7]], p[[8]],
p[[9]], p[[10]], p[[11]], NULL,
p[[12]], p[[13]], p[[14]], p[[15]],
p[[16]], p[[17]], p[[18]], p[[19]],
p[[20]], p[[21]], p[[22]], p[[23]],
p[[24]], p[[25]], p[[26]], p[[27]],
p[[28]], p[[29]], p[[30]], p[[31]],
p[[32]], p[[33]], p[[34]], p[[35]],
ncol = 4)
pies
# Add legend
pdf("FigsUpdated/Pies_Phyla.pdf", width = 9, height = 7)
plot_grid(pies, pie_leg, rel_widths = c(4, 1))
dev.off()
levels(input_fungi_nz$map_loaded$Environment)
# Now do at class level
cla <- list()
c_colors <- list()
c <- list()
# Classes
for (i in 1:nrow(studies)) {
cla[[i]] <- summarize_taxonomy(df[[i]], level = 3, report_higher_tax = F, relative = T)
}
# Colors
classes_present <- as.data.frame(table(input_fungi_nz$taxonomy_loaded$taxonomy3)) %>%
mutate(Var1 = as.character(Var1))
for (i in 1:length(df)) {
c_colors[[i]] <- colorRampPalette(brewer.pal(12, "Paired"))(nrow(classes_present))
c_colors[[i]] <- subset(c_colors[[i]],
classes_present$Var1 %in% df[[i]]$taxonomy_loaded$taxonomy3)
}
# Pies
for (i in 1:nrow(studies)) {
t <- df[[i]]$map_loaded$Location
c[[i]] <- plot_taxa_bars(cla[[i]], df[[i]]$map_loaded, "Study.Name2", 20) +
# geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start=0) +
scale_fill_manual(values = c_colors[[i]]) +
theme_void() +
ggtitle(t) +
theme(legend.position = "none",
plot.title = element_text(size = 5, hjust = 0.5),
plot.margin = margin(0, 0, 0, 0, "pt"))
}
# Get legend - use one with all 37 classes
t <- df[[5]]$map_loaded$Location
nrow(df[[5]]$map_loaded)
df[[i]]$map_loaded$Location
df[[i]]$taxonomy_loaded
nrow(cla[[5]])
# Get legend - use one with all 37 classes
t <- df[[5]]$map_loaded$Location
c_forleg <- plot_taxa_bars(cla[[5]], df[[5]]$map_loaded, "Study.Name2", 37) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start=0) +
scale_fill_manual(values = c_colors[[5]]) +
labs(fill = "Classes") +
theme_void() +
ggtitle(t) +
guides(fill = guide_legend(ncol = 1)) +
theme(legend.position = "right",
legend.key.size = unit(0.25, "cm"),
plot.title = element_text(size = 10, hjust = 0.5, vjust = -15),
plot.margin = margin(0,0,0,0, "pt"))
c_forleg
pie_leg_c <- get_legend(c_forleg)
# Make huge multipanel
pies_c <- plot_grid(c[[1]], c[[2]], c[[3]], c[[4]],
c[[5]], c[[6]], c[[7]], c[[8]],
c[[9]], c[[10]], c[[11]], NULL,
c[[12]], c[[13]], c[[14]], c[[15]],
c[[16]], c[[17]], c[[18]], c[[19]],
c[[20]], c[[21]], c[[22]], c[[23]],
c[[24]], c[[25]], c[[26]], c[[27]],
c[[28]], c[[29]], c[[30]], c[[31]],
c[[32]], c[[33]], c[[34]], c[[35]],
ncol = 4)
pies_c
# Add legend
pdf("FigsUpdated/Pies_Classes.pdf", width = 9, height = 7)
plot_grid(pies_c, pie_leg_c, rel_widths = c(4, 1))
dev.off()
View(old_ko_list)
keggFind(database = "ko", query = new_ko_list$KO[i])
keggList("K03164")
View(ko_comm_DESeq_filt)
sort(colSums(ko_comm_DESeq_subset20))
sort(rowSums(ko_comm_DESeq_subset20))
table(ko_meta_subset20$Environment)
sort(colSums(ko_comm_DESeq_subset20))
sort(rowSums(ko_comm_DESeq_subset20))
sort(ko_meta_subset20$richness_KO)
table(ko_meta_filt$Environment)
sort(colSums(ko_comm_DESeq_filt))
sort(rowSums(ko_comm_DESeq_filt))
sort(ko_meta_subset20$richness_KO)
sort(ko_meta_filt$richness_KO)
sort(ko_meta_subset20$richness_KO)
g5_ko <- ggplot(ko_meta_filt, aes(Axis01, Axis02, colour = Environment)) +
geom_polygon(data = micro.hulls, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Site",
title = "KO Bray-Curtis") +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
ggplot(ko_meta_filt, aes(Axis01, Axis02, colour = Environment)) +
geom_polygon(data = micro.hulls, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Site",
title = "KO Bray-Curtis") +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
micro.hulls <- ddply(ko_meta_filt, c("Environment"), find_hull)
g5_ko <- ggplot(ko_meta_filt, aes(Axis01, Axis02, colour = Environment)) +
geom_polygon(data = micro.hulls, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Site",
title = "KO Bray-Curtis") +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g5_ko
g5_ko <- ggplot(ko_meta_filt, aes(Axis01, Axis02, colour = Environment)) +
geom_polygon(data = micro.hulls, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = (richness_KO), alpha = 0.5) +
scale_size(range = c(1, 10)) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Site",
title = "KO Bray-Curtis") +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g5_ko <- ggplot(ko_meta_filt, aes(Axis01, Axis02, colour = Environment)) +
geom_polygon(data = micro.hulls, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(aes(size = richness_KO), alpha = 0.5) +
scale_size(range = c(1, 10)) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Site",
title = "KO Bray-Curtis") +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g5_ko
g5_ko <- ggplot(ko_meta_filt, aes(Axis01, Axis02, colour = Environment)) +
geom_polygon(data = micro.hulls, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(aes(size = richness_KO), alpha = 0.5) +
scale_size(range = c(1, 10)) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Site",
title = "KO Bray-Curtis") +
theme_bw() +
theme(legend.position = "right",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g5_ko
g5_ko <- ggplot(ko_meta_filt, aes(Axis01, Axis02, colour = Environment)) +
geom_polygon(data = micro.hulls, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(aes(size = richness_KO), alpha = 0.5) +
scale_size(range = c(1, 10)) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Environment",
size = "Number of KOs",
title = "KO Bray-Curtis") +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "right",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g5_ko
g5g6leg <- get_legend(g5_ko)
g5_ko <- g5_ko +
theme(legend.position = "none")
micro.hullsj <- ddply(ko_meta_filt, c("Environment"), find_hullj)
g6_ko <- ggplot(ko_meta_filt, aes(Axis01j, Axis02j, colour = Environment)) +
geom_polygon(data = micro.hullsj, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5) +
labs(x = paste("PC1: ", pcoa1A1, "%", sep = ""),
y = paste("PC2: ", pcoa1A2, "%", sep = ""),
colour = "Environment",
title = "KO Jaccard") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g6_ko
ko_pcoa_leg <- get_legend(g5_ko)
g6_ko <- ggplot(ko_meta_filt, aes(Axis01j, Axis02j, colour = Environment)) +
geom_polygon(data = micro.hullsj, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(aes(size = richness_KO), alpha = 0.5) +
scale_size(range = c(1, 10)) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Environment",
size = "Number of KOs",
title = "KO Jaccard") +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g6_ko
plot_grid(g5_ko, g6_ko, ko_pcoa_leg, ncol = 3, rel_widths = c(2.5,2.5,1))
micro.hulls <- ddply(ko_meta_filt, c("Environment"), find_hull)
g5_ko <- ggplot(ko_meta_filt, aes(Axis01, Axis02, colour = Environment)) +
geom_polygon(data = micro.hulls, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(aes(size = richness_KO), alpha = 0.5) +
scale_size(range = c(1, 10)) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Environment",
size = "Number of KOs",
title = "KO Bray-Curtis") +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "right",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g5_ko
ko_pcoa_leg <- get_legend(g5_ko)
g5_ko <- g5_ko +
theme(legend.position = "none")
plot_grid(g5_ko, g6_ko, ko_pcoa_leg, ncol = 3, rel_widths = c(2.5,2.5,1))
plot_grid(g5_ko, g6_ko, ko_pcoa_leg, ncol = 3, rel_widths = c(2.5,2.5,1.1))
pdf("FigsUpdated/KO_PCoA_min100KOs.pdf", width = 8.5, height = 3.5)
plot_grid(g5_ko, g6_ko, ko_pcoa_leg, ncol = 3, rel_widths = c(2.5,2.5,1.1))
dev.off()
pdf("FigsUpdated/KO_PCoA_min100KOs.pdf", width = 8.5, height = 5)
plot_grid(g5_ko, g6_ko, ko_pcoa_leg, ncol = 3, rel_widths = c(2.5,2.5,1.1))
dev.off()
citation("indicspecies")
# Now increase the cutoff even more - 1000!
sum(ko_richness$richness_KO > 1000) # 209 with > 100
ko_meta_filt <- ko_meta %>%
filter(richness_KO > 1000)
ko_comm_DESeq_filt <- ko_comm_DESeq %>%
filter(rownames(.) %in% rownames(ko_meta_filt))
sum(rownames(ko_comm_DESeq_filt) != rownames(ko_meta_filt))
table(ko_meta_filt$Environment)
# Now increase the cutoff even more - 750!
sum(ko_richness$richness_KO > 750) # 42 with > 750
ko_meta_filt <- ko_meta %>%
filter(richness_KO > 750)
ko_comm_DESeq_filt <- ko_comm_DESeq %>%
filter(rownames(.) %in% rownames(ko_meta_filt))
sum(rownames(ko_comm_DESeq_filt) != rownames(ko_meta_filt))
table(ko_meta_filt$Environment)
# Now increase the cutoff even more - 750!
sum(ko_richness$richness_KO > 700) # 52 with > 750
ko_meta_filt <- ko_meta %>%
filter(richness_KO > 700)
ko_comm_DESeq_filt <- ko_comm_DESeq %>%
filter(rownames(.) %in% rownames(ko_meta_filt))
sum(rownames(ko_comm_DESeq_filt) != rownames(ko_meta_filt))
table(ko_meta_filt$Environment)
# Now increase the cutoff even more - 750!
sum(ko_richness$richness_KO > 600) # 52 with > 750
ko_meta_filt <- ko_meta %>%
filter(richness_KO > 600)
ko_comm_DESeq_filt <- ko_comm_DESeq %>%
filter(rownames(.) %in% rownames(ko_meta_filt))
sum(rownames(ko_comm_DESeq_filt) != rownames(ko_meta_filt))
table(ko_meta_filt$Environment)
# Now increase the cutoff even more - 750!
sum(ko_richness$richness_KO > 750) # 52 with > 750
ko_meta_filt <- ko_meta %>%
filter(richness_KO > 750)
ko_comm_DESeq_filt <- ko_comm_DESeq %>%
filter(rownames(.) %in% rownames(ko_meta_filt))
sum(rownames(ko_comm_DESeq_filt) != rownames(ko_meta_filt))
table(ko_meta_filt$Environment)
sort(colSums(ko_comm_DESeq_filt))
sort(rowSums(ko_comm_DESeq_filt))
sort(ko_meta_filt$richness_KO)
bc_ko <- vegdist(ko_comm_DESeq_filt, method = "bray")
pcoa_ko <- cmdscale(bc_ko, k = nrow(ko_meta_filt) - 1, eig = T)
pcoaA1 <- round((eigenvals(pcoa_ko)/sum(eigenvals(pcoa_ko)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa_ko)/sum(eigenvals(pcoa_ko)))[2]*100, digits = 1)
ko_meta_filt$Axis01 <- scores(pcoa_ko)[,1]
ko_meta_filt$Axis02 <- scores(pcoa_ko)[,2]
micro.hulls <- ddply(ko_meta_filt, c("Environment"), find_hull)
g5_ko <- ggplot(ko_meta_filt, aes(Axis01, Axis02, colour = Environment)) +
geom_polygon(data = micro.hulls, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(aes(size = richness_KO), alpha = 0.5) +
scale_size(range = c(1, 10)) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Environment",
size = "Number of KOs",
title = "KO Bray-Curtis") +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "right",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g5_ko
ko_pcoa_leg <- get_legend(g5_ko)
g5_ko <- g5_ko +
theme(legend.position = "none")
jac_ko <- vegdist(ko_comm_DESeq_filt, method = "jaccard")
pcoa1_ko <- cmdscale(jac_ko, k = nrow(ko_meta_filt) - 1, eig = T)
pcoa1A1 <- round((eigenvals(pcoa1_ko)/sum(eigenvals(pcoa1_ko)))[1]*100, digits = 1)
pcoa1A2 <- round((eigenvals(pcoa1_ko)/sum(eigenvals(pcoa1_ko)))[2]*100, digits = 1)
ko_meta_filt$Axis01j <- scores(pcoa1_ko)[,1]
ko_meta_filt$Axis02j <- scores(pcoa1_ko)[,2]
micro.hullsj <- ddply(ko_meta_filt, c("Environment"), find_hullj)
g6_ko <- ggplot(ko_meta_filt, aes(Axis01j, Axis02j, colour = Environment)) +
geom_polygon(data = micro.hullsj, aes(colour = Environment, fill = Environment),
alpha = 0.1, show.legend = F) +
geom_point(aes(size = richness_KO), alpha = 0.5) +
scale_size(range = c(1, 10)) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Environment",
size = "Number of KOs",
title = "KO Jaccard") +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(vjust = 0))
g6_ko
plot_grid(g5_ko, g6_ko, ko_pcoa_leg, ncol = 3, rel_widths = c(2.5,2.5,1.1))
pdf("FigsUpdated/KO_PCoA_min750KOs.pdf", width = 8.5, height = 5)
plot_grid(g5_ko, g6_ko, ko_pcoa_leg, ncol = 3, rel_widths = c(2.5,2.5,1.1))
dev.off()
